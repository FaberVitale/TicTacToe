{"version":3,"sources":["util/boardUtil.js","constants/index.js","reducers/gameReducer.js","reducers/undoRedo.js","reducers/index.js","reducers/gameModeReducer.js","constants/actions.js","reducers/modalStateReducer.js","configureStore.js","components/BoardCell.js","ai/logicRunner.js","ai/logicSteps.js","ai/index.js","actionCreators/index.js","containers/TicTacToeRow.js","components/ControlBar.js","containers/TicTacToeControlBar.js","containers/TicTacToeMain.js","components/OptionItem.js","components/Listbox.js","containers/TicTacToeModeSelect.js","containers/TicTacToeHeader.js","components/Modal.js","components/ModalTextContent.js","containers/TurnCounter.js","containers/TicTacToeInfoBar.js","components/dynamicLoader.js","containers/App.js","registerServiceWorker.js","index.js","selectors/gameSelectors.js","selectors/undoRedoSelectors.js","selectors/index.js","util/stringUtil.js","util/functionUtil.js"],"names":["winnerLine","i","len","arguments","length","_ref","undefined","_ref2","Object","_mnt_c_Users_Faber_Documents_Code_React_tictactoe_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","cell0","cell1","cell2","symb","empty","getCellThatCreatesFork","board","thisInd","thatInd","thisLine","lines","thatLine","thisCellInd","j","getEmptyCellIndex","lineIndex","line","getBoardInfo","_lines","_corners","_sides","xSingleScore","symbScore","x","xDoubleScore","oSingleScore","o","oDoubleScore","res","_mnt_c_Users_Faber_Documents_Code_React_tictactoe_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","single","double","corners","sides","_lines$i","indexOne","indexTwo","indexThree","push","edges","edge","side","symbToA11y","_symbToA11y","_symbScore","gameMode","PVAI_EASY","PVAI_MEDIUM","PVAI_UNFAIR","PVP","gameModeValues","keys","map","key","gameModeInv","easy","medium","unfair","pvp","mediaQueryWidth","cellAriaLabel","rootId","throttleTime","opposingEdges","0","8","2","6","forkSpecialCases","join","initState","concat","Array","fill","jumpBack","past","present","future","times","slice","toConsumableArray","jumpForward","combineReducers","state","action","type","payload","game","reducer","newPresent","advance","undoRedo","setIn","pos","isModalOpen","configureStore","middeware","applyMiddleware","thunk","createStore","cellStates","mapStateToCellClassName","mapStateToPClassName","BoardCell","_PureComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTouchStart","evt","isDisabled","handleClick","getRef","elem","buttonElem","cellIndex","id","prevCellState","inherits","createClass","value","cellState","document","activeElement","$disabled","blur","react_default","a","createElement","ref","className","onClick","onTouchStart","onAnimationEnd","handleAnimEnd","disabled","aria-label","ariaLabel","aria-hidden","getPClassName","PureComponent","getCellState","indexOf","logicRunner","zeroTurnMove","otherMoves","turn","ai","other","boardInfo","move","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","otherMove","err","return","errMessage","emptyCells","prototype","reduce","aggr","index","warn","lineLogic","twoInLine","fork","_boardInfo$lines$ai$s","slicedToArray","b","possibleForkInd","c","_boardInfo$lines$othe","filter","fBoard","takeIfEmpty","center","corner","opposite","turnZeroLogic","Math","random","aiProfiles","_aiProfiles","defineProperty","undoRedoAction","actionType","dispatch","getState","canPlayerPlaceSymb","isGameOver","isPVP","aiTimeoutCallback","newState","difficulty","getBoard","getTurn","cellIndexes","connectOptions","areStatesEqual","areBoardsEqual","connect","ownProps","rowVals","getRow","rowIndex","getWinnerLine","onCellClick","nextPlayer","getNextPlayer","isCellEmpty","shouldAiAct","setTimeout","ind","components_BoardCell","renderSquare","ControlBar","target","currentTarget","targetClick","_this$props","isNewDisabled","onNewClick","isUndoDisabled","onUndoClick","isRedoDisabled","onRedoClick","isLargeScreen","elems","undo","reverse","redo","index_esm","isNew","canUndo","canRedo","TicTacToeMain","containers_TicTacToeRow","TicTacToeControlBar","OptionItem","role","aria-selected","isSelected","text","optionListClassLists","svgAnimatorClassList","getOptionId","parentId","getOptionIndex","optionId","parseInt","Listbox","renderOption","item","OptionItem_OptionItem","selectedIndex","makeList","items","assertThisInitialized","setVisibility","throttle","visibility","setState","prevState","isVisible","isAnimating","handleKeyDown","e","isKnownKey","handleItemClick","preventDefault","parentElement","handleBlur","handleTransitionEnd","_this2","el","tabIndex","aria-haspopup","aria-expanded","aria-activedescendant","aria-labelledby","label","aria-describedby","describer","onFocus","handleFocus","onBlur","onKeyDown","onTransitionEnd","fa_index_esm","getGameModeIndex","mode","val","getGameModeKey","Listbox_Listbox","TicTacToeHeader","TicTacToeModeSelect","modalContentClass","modalButtonClass","mStates","HIDDEN","TRANS_HIDE","VISIBLE","TRANS_SHOW","Modal","getButtonRef","closeButton","getModalContentRef","modalContent","changeState","condition","nextState","mState","show","hide","close","handleClickOutside","click","handleKeyEvents","blurCB","focus","modalRoot","updateDOM","body","style","overflow","getElementById","setAttribute","removeAttribute","$id","appendChild","activator","addEventListener","shouldShow","removeEventListener","nextProps","window","requestAnimationFrame","focused","ReactDOM","createPortal","title","children","Component","ModalTextContent","TicTacToeInfoBar","openModal","containers_TurnCounter","components_Modal","closeModal","components_ModalTextContent","getModalState","dynamicLoader","loader","_Component","DynamicLoader","_getPrototypeOf2","_len","args","_key","apply","component","storeComponent","esModule","default","logFail","then","_","Comp","React","store","App","mediaQCallback","matches","content","containers_TicTacToeMain","containers_TicTacToeInfoBar","es","keybinder","containers_TicTacToeHeader","__webpack_require__","bind","react_responsive_default","query","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","root","render","containers_App","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","getCol","createSelector","getMainDiag","getAntiDiag","countNot","winLine","d","__webpack_exports__","undoRedoSelectors_canUndo","undoRedoSelectors_canRedo","gameSelectors_isCellEmpty","gameSelectors_canPlayerPlaceSymb","gameSelectors_getGameModeIndex","str","char","_selectors__WEBPACK_IMPORTED_MODULE_0__","span","func","thisArg","last","context","now","Date","hasAttribute","prev"],"mappings":"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","file":"static/js/main.466fd45a.chunk.js","sourcesContent":["import { symb, lines, symbScore, sides, edges } from '../constants';\n\nexport const winnerLine = (...lines) => {\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [cell0, cell1, cell2] = lines[i];\n\n    const isWinLine =\n      cell0 !== symb.empty && cell1 === cell0 && cell2 === cell0;\n\n    if (isWinLine) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nexport const getCellThatCreatesFork = (board, thisInd, thatInd) => {\n  const thisLine = lines[thisInd],\n    thatLine = lines[thatInd];\n\n  for (let i = 0; i < 3; i++) {\n    const thisCellInd = thisLine[i];\n\n    for (let j = 0; j < 3; j++) {\n      const thatCellInd = thatLine[j];\n      if (thisCellInd === thatCellInd && board[thisCellInd] === symb.empty) {\n        return thisCellInd;\n      }\n    }\n  }\n  return -1;\n};\n\nexport const getCommonEmptyCellIndex = (board, thisLineInd, thatLineInd) => {\n  for (let i = 0, len = lines[thisLineInd].length; i < len; i++) {\n    const cellInd = lines[thisLineInd][i];\n    if (\n      board[cellInd] === symb.empty &&\n      lines[thatLineInd].indexOf(cellInd) > -1\n    ) {\n      return cellInd;\n    }\n  }\n  return -1;\n};\n\nexport const getEmptyCellIndex = (board, lineIndex) => {\n  const line = lines[lineIndex];\n\n  for (let i = 0, len = line.length; i < len; i++) {\n    if (board[line[i]] === symb.empty) {\n      return line[i];\n    }\n  }\n  return -1;\n};\n\nexport const getBoardInfo = board => {\n  const xSingleScore = symbScore[symb.x],\n    xDoubleScore = 2 * xSingleScore;\n  const oSingleScore = symbScore[symb.o],\n    oDoubleScore = 2 * oSingleScore;\n\n  const res = {\n    lines: {\n      [symb.x]: {\n        single: [],\n        double: [],\n      },\n      [symb.o]: {\n        single: [],\n        double: [],\n      },\n    },\n    corners: {\n      [symb.x]: [],\n      [symb.o]: [],\n      [symb.empty]: [],\n    },\n\n    sides: {\n      [symb.x]: [],\n      [symb.o]: [],\n      [symb.empty]: [],\n    },\n  };\n\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [indexOne, indexTwo, indexThree] = lines[i];\n\n    const score =\n      symbScore[board[indexOne]] +\n      symbScore[board[indexTwo]] +\n      symbScore[board[indexThree]];\n\n    switch (score) {\n      case xSingleScore:\n        res.lines[symb.x].single.push(i);\n        break;\n      case xDoubleScore:\n        res.lines[symb.x].double.push(i);\n        break;\n      case oSingleScore:\n        res.lines[symb.o].single.push(i);\n        break;\n      case oDoubleScore:\n        res.lines[symb.o].double.push(i);\n        break;\n      default: // not added to res\n    }\n  }\n\n  //corners\n  for (let i = 0, len = edges.length; i < len; i++) {\n    const edge = edges[i];\n    res.corners[board[edge]].push(edge);\n  }\n\n  //sides\n  for (let i = 0, len = sides.length; i < len; i++) {\n    const side = sides[i];\n    res.sides[board[side]].push(side);\n  }\n\n  return res;\n};\n","/* symb values should be single characters part of Unicode BMP.\n * if character outside BMP are used, it should be added another object\n *  that maps symb keys to the characters to display in the BoardCells\n */\nexport const symb = {\n  x: '✗', //\\u2717\n  o: 'O',\n  empty: ' ', //\\u0020 a simple white space\n};\n\nexport const symbToA11y = {\n  [symb.x]: 'X',\n  [symb.o]: 'O',\n  [symb.empty]: 'empty',\n};\n\nexport const symbScore = {\n  [symb.x]: 10,\n  [symb.o]: -1,\n  [symb.empty]: 0,\n};\n\nexport const gameMode = {\n  PVAI_EASY: 'easy',\n  PVAI_MEDIUM: 'medium',\n  PVAI_UNFAIR: 'unfair',\n  PVP: 'pvp',\n};\n\nexport const gameModeValues = Object.keys(gameMode).map(function value(key) {\n  return gameMode[key];\n});\n\nexport const gameModeInv = {\n  easy: 'PVAI_EASY',\n  medium: 'PVAI_MEDIUM',\n  unfair: 'PVAI_UNFAIR',\n  pvp: 'PVP',\n};\n\nexport const mediaQueryWidth = '(min-width: 769px)';\n\nexport const cellAriaLabel = [\n  'cell 1,1',\n  'cell 1,2',\n  'cell 1,3',\n  'cell 2,1',\n  'cell 2,2',\n  'cell 2,3',\n  'cell 3,1',\n  'cell 3,2',\n  'cell 3,3',\n];\n\nexport const rootId = 'root';\n\nexport const throttleTime = 150;\n\n/* board constants*/\n\nexport const opposingEdges = {\n  '0': 8,\n  '8': 0,\n  '2': 6,\n  '6': 2,\n};\n\nexport const lines = [\n  [0, 4, 8],\n  [2, 4, 6],\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n];\n\nexport const forkSpecialCases = [\n  [\n    symb.x,\n    symb.empty,\n    symb.empty,\n    symb.empty,\n    symb.o,\n    symb.empty,\n    symb.empty,\n    symb.empty,\n    symb.x,\n  ].join(''),\n  [\n    symb.empty,\n    symb.empty,\n    symb.x,\n    symb.empty,\n    symb.o,\n    symb.empty,\n    symb.x,\n    symb.empty,\n    symb.empty,\n  ].join(''),\n];\n\nexport const sides = [1, 5, 7, 4];\n\nexport const edges = [0, 2, 8, 6];\n","import { symb } from '../constants';\nimport { PLACE_SIGN, PLACE_SIGN_AI } from '../constants/actions';\nimport { setIn } from '../util/stringUtil';\n\nconst initState = `${new Array(9).fill(symb.empty).join('')}`;\n\nexport default (state = initState, action) => {\n  if (action.type === PLACE_SIGN || action.type === PLACE_SIGN_AI) {\n    return setIn(state, action.payload.pos, action.payload.symb);\n  }\n  return state;\n};\n","//see http://redux.js.org/docs/recipes/ImplementingUndoHistory.html\nimport {\n  UNDO,\n  REDO,\n  NEW,\n  UNDO_AI,\n  REDO_AI,\n  CHANGE_GAME_MODE,\n} from '../constants/actions';\n\nconst UNDO_INIT = '@@UNDOREDO/INIT';\n\nconst jumpBack = (past, present, future, times) => {\n  if (times === 1) {\n    return {\n      past: past.slice(0, past.length - 1),\n      present: past[past.length - 1],\n      future: [present, ...future],\n    };\n  }\n  return {\n    past: past.slice(0, past.length - times),\n    present: past[past.length - times],\n    future: [...past.slice(past.length - times + 1), present, ...future],\n  };\n};\n\nconst jumpForward = (past, present, future, times) => ({\n  past: [...past, present, ...future.slice(0, times - 1)],\n  present: future[times - 1],\n  future: future.slice(times),\n});\n\nconst advance = (past, present, newPresent) => ({\n  past: [...past, present],\n  present: newPresent,\n  future: [],\n});\n\nexport default reducer => {\n  const initState = {\n    past: [],\n    present: reducer(undefined, { action: UNDO_INIT }), //the reducer provides the default state\n    future: [],\n  };\n\n  return (state = initState, action) => {\n    const { past, present, future } = state;\n    let times;\n\n    switch (action.type) {\n      case UNDO:\n        if (past.length < 1) {\n          return state;\n        }\n\n        return jumpBack(past, present, future, 1);\n\n      case REDO:\n        if (future.length < 1) {\n          return state;\n        }\n\n        return jumpForward(past, present, future, 1);\n\n      case NEW:\n        return initState;\n      case UNDO_AI:\n        if (past.length < 2) {\n          return state;\n        }\n        times = past.length % 2 !== 0 ? 1 : 2;\n\n        return jumpBack(past, present, future, times);\n\n      case REDO_AI:\n        times = future.length < 2 ? 1 : 2;\n        return jumpForward(past, present, future, times);\n\n      case CHANGE_GAME_MODE:\n        return initState;\n      default:\n        const newPresent = reducer(present, action);\n\n        if (newPresent === present) {\n          return state;\n        }\n\n        return advance(past, present, newPresent);\n    }\n  };\n};\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\nimport undoRedo from './undoRedo';\nimport gameModeReducer from './gameModeReducer';\nimport modalStateReducer from './modalStateReducer';\n\nexport default combineReducers({\n  gameMode: gameModeReducer,\n  game: undoRedo(gameReducer),\n  isModalOpen: modalStateReducer,\n});\n","import { CHANGE_GAME_MODE } from '../constants/actions';\nconst initState = 'PVAI_MEDIUM';\n\nexport default (state = initState, action) => {\n  if (action.type === CHANGE_GAME_MODE) {\n    return action.payload;\n  }\n  return state;\n};\n","export const PLACE_SIGN = 'PLACE_SIGN';\n\nexport const PLACE_SIGN_AI = 'PLACE_SIGN_AI';\n\nexport const NEW = 'NEW';\n\nexport const UNDO = 'UNDO';\n\nexport const REDO = 'REDO';\n\nexport const CHANGE_GAME_MODE = 'CHANGE_GAME_MODE';\n\nexport const UNDO_AI = 'UNDO_AI';\n\nexport const REDO_AI = 'REDO_AI';\n\nexport const OPEN_MODAL = 'OPEN_MODAL';\n\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n","import { OPEN_MODAL, CLOSE_MODAL } from '../constants/actions';\n\nconst initState = false;\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return true;\n    case CLOSE_MODAL:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default (function buildConfigureStore() {\n  const middeware = applyMiddleware(thunk);\n\n  if (process.env.NODE_ENV === 'production') {\n    return () => createStore(reducer, middeware);\n  }\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return () => createStore(reducer, composeEnhancers(middeware));\n})();\n","import React, { PureComponent } from 'react';\nimport '../css/board-cell.css';\nimport PropTypes from 'prop-types';\nimport { symbToA11y } from '../constants';\nimport { lines } from '../constants';\nimport { $disabled } from '../util/functionUtil';\n\nexport const cellStates = {\n  IDLE: 0,\n  FILLED: 1,\n  VICTORY: 2,\n};\n\nconst mapStateToCellClassName = [\n  'board-cell idle',\n  'board-cell disabled',\n  'board-cell disabled victory',\n];\n\nconst mapStateToPClassName = ['empty', 'filled-animated', 'filled-animated'];\n\nconst BoardCell = class extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = props.handleClick(props.cellIndex);\n\n    this.id = `cell-${this.props.cellIndex}`;\n    this.prevCellState = -1;\n  }\n\n  handleTouchStart = evt => {\n    // touch events fire on disabled buttons\n    if (this.props.isDisabled) {\n      return;\n    }\n\n    this.handleClick();\n  };\n\n  componentWillUpdate() {\n    this.prevCellState = this.props.cellState;\n  }\n\n  getRef = elem => {\n    this.buttonElem = elem;\n  };\n  /* computes P className avoids fadeIn animations on undo*/\n  getPClassName() {\n    if (\n      this.prevCellState > -1 &&\n      this.prevCellState === cellStates.VICTORY &&\n      this.props.cellState === cellStates.FILLED\n    ) {\n      return 'filled';\n    }\n\n    return mapStateToPClassName[this.props.cellState];\n  }\n\n  componentDidUpdate() {\n    if (\n      document.activeElement === this.buttonElem &&\n      $disabled(this.buttonElem)\n    ) {\n      this.buttonElem.blur(); ///firefox keeps focused blurred buttons\n    }\n  }\n  render() {\n    return (\n      <button\n        type=\"button\"\n        id={this.id}\n        ref={this.getRef}\n        className={mapStateToCellClassName[this.props.cellState]}\n        onClick={this.handleClick}\n        onTouchStart={this.handleTouchStart}\n        onAnimationEnd={this.handleAnimEnd}\n        disabled={this.props.isDisabled}\n        aria-label={`${this.props.ariaLabel}: ${symbToA11y[this.props.value]}`}\n      >\n        <div className=\"victory-overlay\" aria-hidden=\"true\" />\n        <p className={this.getPClassName()}>{this.props.value}</p>\n      </button>\n    );\n  }\n};\n\nBoardCell.getCellState = (winnerLine, isDisabled, cellIndex) => {\n  let res;\n\n  if (winnerLine < 0) {\n    if (isDisabled) {\n      res = cellStates.FILLED;\n    } else {\n      res = cellStates.IDLE;\n    }\n  } else {\n    if (winnerLine > -1 && lines[winnerLine].indexOf(cellIndex) > -1) {\n      res = cellStates.VICTORY;\n    } else {\n      res = cellStates.FILLED;\n    }\n  }\n  return res;\n};\n\nBoardCell.propTypes = {\n  cellIndex: PropTypes.number.isRequired,\n  value: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  cellState: PropTypes.number.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n};\n\nexport default BoardCell;\n","import { symb } from '../constants';\nimport { getBoardInfo } from '../util/boardUtil';\nimport { warn } from '../util/functionUtil';\n\nexport default (zeroTurnMove, otherMoves = []) => (board, turn, ai) => {\n  if (turn === 0) {\n    return zeroTurnMove();\n  }\n\n  const other = ai === symb.x ? symb.o : symb.x;\n  const boardInfo = getBoardInfo(board);\n  let move = -1;\n\n  for (let otherMove of otherMoves) {\n    move = otherMove(board, boardInfo, ai, other, turn);\n    if (move > -1) {\n      return move;\n    }\n  }\n\n  //something went wrong...\n  let errMessage =\n    turn >= 9\n      ? \"this function shouldn't be called on a filled board\"\n      : 'ai logic error';\n\n  //recovery: try to return an empty cell if present\n  const emptyCells = Array.prototype.reduce.call(\n    board,\n    (aggr, next, index) =>\n      aggr > -1 ? aggr : next === symb.empty ? index : aggr,\n    -1,\n  );\n\n  if (emptyCells.length > 0) {\n    errMessage += '\\nrecovery: picked an empty cell';\n\n    move = emptyCells[0];\n  }\n\n  warn(errMessage);\n\n  return move;\n};\n","import { getEmptyCellIndex, getCellThatCreatesFork } from '../util/boardUtil';\nimport { symb, forkSpecialCases, opposingEdges } from '../constants';\n\nexport const lineLogic = {\n  twoInLine: (board, boardInfo, ai, other, turn) => {\n    if (turn < 3) {\n      return -1;\n    }\n    //twoInLine ai\n    if (boardInfo.lines[ai].double.length > 0) {\n      return getEmptyCellIndex(board, boardInfo.lines[ai].double[0]);\n    }\n\n    //twoinLine other\n    if (boardInfo.lines[other].double.length > 0) {\n      return getEmptyCellIndex(board, boardInfo.lines[other].double[0]);\n    }\n    return -1;\n  },\n\n  fork: (board, boardInfo, ai, other, turn) => {\n    if (turn < 3) {\n      return -1;\n    }\n\n    if (boardInfo.lines[ai].single.length > 1) {\n      const [a, b] = boardInfo.lines[ai].single;\n      let possibleForkInd = -1;\n\n      if (boardInfo.lines[ai].single.length > 2) {\n        const c = boardInfo.lines[ai].single[2];\n        possibleForkInd = getCellThatCreatesFork(board, b, c);\n\n        if (possibleForkInd < 0) {\n          possibleForkInd = getCellThatCreatesFork(board, a, c);\n        }\n      }\n      if (possibleForkInd < 0) {\n        possibleForkInd = getCellThatCreatesFork(board, a, b);\n      }\n\n      if (possibleForkInd > 0) {\n        return possibleForkInd;\n      }\n    }\n\n    //fork other\n    if (boardInfo.lines[other].single.length > 1) {\n      const [a, b] = boardInfo.lines[other].single;\n      let possibleForkInd = getCellThatCreatesFork(board, a, b);\n\n      if (boardInfo.lines[other].single.length > 2 && possibleForkInd < 0) {\n        const c = boardInfo.lines[other].single[2];\n        possibleForkInd = getCellThatCreatesFork(board, b, c);\n\n        if (possibleForkInd < 0) {\n          possibleForkInd = getCellThatCreatesFork(board, a, c);\n        }\n      }\n\n      if (possibleForkInd >= 0) {\n        //check if it is a special case\n        if (forkSpecialCases.filter(fBoard => fBoard === board).length > 0) {\n          return boardInfo.sides[symb.empty][0];\n        } else {\n          //place the symb on the forking cell\n          return possibleForkInd;\n        }\n      }\n    }\n    return -1;\n  },\n};\n\nexport const takeIfEmpty = {\n  center: board => (board[4] === symb.empty ? 4 : -1),\n\n  edge: (board, boardInfo, ai, other, turn) => {\n    //take opposite edge of an opponent if empty\n    for (let corner of boardInfo.corners[other]) {\n      const opposite = opposingEdges[corner];\n      if (board[opposite] === symb.empty) {\n        return opposite;\n      }\n    }\n    //take 1st empty edge\n    if (boardInfo.corners[symb.empty].length > 0) {\n      return boardInfo.corners[symb.empty][0];\n    }\n    return -1;\n  },\n\n  side: (board, boardInfo, ai, other, turn) => {\n    if (boardInfo.sides[symb.empty].length > 0) {\n      return boardInfo.sides[symb.empty][0];\n    }\n    return -1;\n  },\n};\n\nexport const turnZeroLogic = {\n  takeCenterOrEdges: () => (Math.random() * 5) << 1,\n  takeRandomCell: () => (Math.random * 9) >>> 0,\n};\n","import logicRunner from './logicRunner';\nimport { turnZeroLogic, takeIfEmpty, lineLogic } from './logicSteps';\nimport { gameMode } from '../constants';\n\nconst aiProfiles = {\n  [gameMode.PVAI_EASY]: logicRunner(turnZeroLogic.takeRandomCell, [\n    takeIfEmpty.side,\n    takeIfEmpty.center,\n    takeIfEmpty.edge,\n  ]),\n  [gameMode.PVAI_MEDIUM]: logicRunner(turnZeroLogic.takeCenterOrEdges, [\n    lineLogic.twoInLine,\n    takeIfEmpty.center,\n    takeIfEmpty.edge,\n    takeIfEmpty.side,\n  ]),\n  [gameMode.PVAI_UNFAIR]: logicRunner(turnZeroLogic.takeCenterOrEdges, [\n    lineLogic.twoInLine,\n    lineLogic.fork,\n    takeIfEmpty.center,\n    takeIfEmpty.edge,\n    takeIfEmpty.side,\n  ]),\n};\n\nexport const aiMove = (board, turn, ai, difficulty) => {\n  return aiProfiles[gameMode[difficulty]](board, turn, ai);\n};\n","import {\n  PLACE_SIGN,\n  CHANGE_GAME_MODE,\n  UNDO,\n  UNDO_AI,\n  REDO,\n  REDO_AI,\n  PLACE_SIGN_AI,\n} from '../constants/actions';\nimport {\n  getNextPlayer,\n  getBoard,\n  getTurn,\n  shouldAiAct,\n  canPlayerPlaceSymb,\n  getGameModeKey,\n  isPVP,\n  isGameOver,\n  isCellEmpty,\n} from '../selectors';\nimport { aiMove } from '../ai';\nimport { symb, gameModeInv } from '../constants';\nimport { warn } from '../util/functionUtil';\n\n// Timeout of aiTimeoutCallback\nconst AI_DELAY = 100;\n\nexport const setGameMode = val => (dispatch, getState) => {\n  const key = gameModeInv[val];\n  if (key && getGameModeKey(getState()) !== key) {\n    dispatch({\n      type: CHANGE_GAME_MODE,\n      payload: key,\n    });\n  }\n};\n\nexport const undoRedoAction = actionType => (dispatch, getState) => {\n  const state = getState();\n  if (!canPlayerPlaceSymb(state) && !isGameOver(state)) {\n    return;\n  }\n\n  if (!isPVP(state)) {\n    switch (actionType) {\n      case UNDO:\n        dispatch({ type: UNDO_AI });\n        break;\n      case REDO:\n        dispatch({ type: REDO_AI });\n        break;\n      default:\n        warn(\n          `undoRedoAction recieved an unknown action: ${actionType}\n          it accepts only UNDO, REDO actions`,\n        );\n    }\n  } else if (actionType) {\n    dispatch({ type: actionType });\n  }\n};\n\nconst aiTimeoutCallback = (dispatch, newState) => {\n  const pos = aiMove(\n    getBoard(newState),\n    getTurn(newState),\n    symb.o,\n    newState.gameMode,\n  );\n\n  dispatch({\n    type: PLACE_SIGN_AI,\n    payload: {\n      pos,\n      symb: symb.o,\n    },\n  });\n};\n\nexport const placeSign = pos => (dispatch, getState) => {\n  const state = getState();\n\n  const nextPlayer = getNextPlayer(state);\n\n  if (!(canPlayerPlaceSymb(state) && isCellEmpty(state)(pos))) {\n    return;\n  }\n\n  dispatch({\n    type: PLACE_SIGN,\n    payload: {\n      pos,\n      symb: nextPlayer,\n    },\n  });\n\n  const newState = getState();\n\n  if (shouldAiAct(newState)) {\n    setTimeout(aiTimeoutCallback, AI_DELAY, dispatch, newState);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BoardCell from '../components/BoardCell';\nimport { getRow, isGameOver, getWinnerLine } from '../selectors';\nimport { symb, cellAriaLabel } from '../constants';\nimport { placeSign } from '../actionCreators';\nimport '../css/board-row.css';\nimport propTypes from 'prop-types';\nimport { areBoardsEqual } from '../util/functionUtil';\n\nconst cellIndexes = [0, 1, 2];\n\nconst renderSquare = (cellIndex, onCellClick, value, cellState, isDisabled) => {\n  return (\n    <BoardCell\n      key={cellIndex}\n      cellIndex={cellIndex}\n      handleClick={onCellClick}\n      value={value}\n      isDisabled={isDisabled}\n      cellState={cellState}\n      ariaLabel={cellAriaLabel[cellIndex]}\n    />\n  );\n};\n\nconst TicTacToeRow = ({\n  rowIndex,\n  onCellClick,\n  rowVals,\n  isGameOver,\n  winnerLine,\n}) => {\n  return (\n    <div className=\"board-row\">\n      {cellIndexes.map(ind => {\n        const value = rowVals[ind];\n        const cellIndex = 3 * rowIndex + ind;\n        const isDisabled = value !== symb.empty || isGameOver;\n        const cellState = BoardCell.getCellState(\n          winnerLine,\n          isDisabled,\n          cellIndex,\n        );\n\n        return renderSquare(\n          cellIndex,\n          onCellClick,\n          value,\n          cellState,\n          isDisabled,\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  rowVals: getRow(ownProps.rowIndex)(state),\n  isGameOver: isGameOver(state),\n  winnerLine: getWinnerLine(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCellClick: cellIndex => () => dispatch(placeSign(cellIndex)),\n});\n\nconst connectOptions = {\n  areStatesEqual: areBoardsEqual,\n};\n\nTicTacToeRow.propTypes = {\n  rowIndex: propTypes.number.isRequired,\n  onCellClick: propTypes.func.isRequired,\n  rowVals: propTypes.string.isRequired,\n  isGameOver: propTypes.bool.isRequired,\n  winnerLine: propTypes.number.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  connectOptions,\n)(TicTacToeRow);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/control-bar.css';\nimport { MdUndo, MdRedo } from 'react-icons/md';\nimport { $disabled } from '../util/functionUtil';\n\nclass ControlBar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.targetClick = null;\n  }\n\n  handleClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      return;\n    }\n\n    this.targetClick = evt.target;\n  };\n\n  componentDidUpdate() {\n    if (this.targetClick && $disabled(this.targetClick)) {\n      this.targetClick.blur();\n      this.targetClick = null;\n    }\n  }\n\n  render() {\n    const {\n      isNewDisabled,\n      onNewClick,\n      isUndoDisabled,\n      onUndoClick,\n      isRedoDisabled,\n      onRedoClick,\n      isLargeScreen,\n    } = this.props;\n\n    const elems = [\n      <button\n        key={0}\n        type=\"button\"\n        aria-label=\"new\"\n        id=\"new\"\n        className=\"control-bar-button\"\n        disabled={isNewDisabled}\n        onClick={onNewClick}\n      >\n        new\n      </button>,\n      <button\n        key={1}\n        type=\"button\"\n        aria-label=\"undo\"\n        id=\"undo\"\n        className=\"control-bar-button\"\n        disabled={isUndoDisabled}\n        onClick={onUndoClick}\n      >\n        {ControlBar.undo[+isLargeScreen]}\n      </button>,\n    ];\n\n    return (\n      <div className=\"control-bar\" ref={this.getRef} onClick={this.handleClick}>\n        {this.props.isLargeScreen ? elems : elems.reverse()}\n        <button\n          type=\"button\"\n          aria-label=\"redo\"\n          id=\"redo\"\n          className=\"control-bar-button\"\n          disabled={isRedoDisabled}\n          onClick={onRedoClick}\n        >\n          {ControlBar.redo[+isLargeScreen]}\n        </button>\n      </div>\n    );\n  }\n}\n\nControlBar.redo = [<MdRedo />, 'redo'];\n\nControlBar.undo = [<MdUndo />, 'undo'];\n\nControlBar.propTypes = {\n  isNewDisabled: PropTypes.bool.isRequired,\n  isUndoDisabled: PropTypes.bool.isRequired,\n  isRedoDisabled: PropTypes.bool.isRequired,\n  onNewClick: PropTypes.func.isRequired,\n  onUndoClick: PropTypes.func.isRequired,\n  onRedoClick: PropTypes.func.isRequired,\n  isLargeScreen: PropTypes.bool.isRequired,\n};\n\nexport default ControlBar;\n","import { connect } from 'react-redux';\nimport { NEW, UNDO, REDO } from '../constants/actions';\nimport { canUndo, canRedo, isNew } from '../selectors';\nimport ControlBar from '../components/ControlBar';\nimport { undoRedoAction } from '../actionCreators';\n\nconst mapStateToProps = state => ({\n  isNewDisabled: isNew(state),\n  isUndoDisabled: !canUndo(state),\n  isRedoDisabled: !canRedo(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onNewClick: () => dispatch({ type: NEW }),\n  onUndoClick: () => dispatch(undoRedoAction(UNDO)),\n  onRedoClick: () => dispatch(undoRedoAction(REDO)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ControlBar);\n","import React, { PureComponent } from 'react';\nimport TicTacToeRow from './TicTacToeRow';\nimport TicTacToeControlBar from './TicTacToeControlBar';\nimport '../css/board.css';\nimport PropTypes from 'prop-types';\n\nclass TicTacToeMain extends PureComponent {\n  render() {\n    /*\n     * reorder markup in order to not mess up\n     *  the focus order for mobile screen-readers\n     */\n    const elems = [\n      <div className=\"board\" key={0}>\n        <TicTacToeRow rowIndex={0} />\n        <div className=\"row-separator\" aria-hidden=\"true\" />\n        <TicTacToeRow rowIndex={1} />\n        <div className=\"row-separator\" aria-hidden=\"true\" />\n        <TicTacToeRow rowIndex={2} />\n      </div>,\n      <TicTacToeControlBar isLargeScreen={this.props.isLargeScreen} key={1} />,\n    ];\n    return <main>{this.props.isLargeScreen ? elems : elems.reverse()}</main>;\n  }\n}\n\nTicTacToeMain.propTypes = {\n  isLargeScreen: PropTypes.bool.isRequired,\n};\n\nexport default TicTacToeMain;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class OptionItem extends PureComponent {\n  render() {\n    return (\n      <li\n        className=\"option-item option-item-theme\"\n        role=\"option\"\n        aria-selected={this.props.isSelected}\n        id={this.props.id}\n      >\n        <span>{this.props.isSelected ? '✓' : ' '}</span>\n        <span>{this.props.text}</span>\n      </li>\n    );\n  }\n}\n\nOptionItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport '../css/listbox.css';\nimport { FaCaretRight } from 'react-icons/fa';\nimport OptionItem from './OptionItem';\nimport PropTypes from 'prop-types';\nimport { throttle } from '../util/functionUtil';\nimport { throttleTime } from '../constants';\n\nconst optionListClassLists = {\n  visible: 'option-list option-list-theme option-list-visible',\n  hidden: 'option-list option-list-theme option-list-hidden',\n  hiddenAnimOver: 'option-list option-list-theme option-list-anim-over',\n};\n\nconst svgAnimatorClassList = {\n  visible: 'svg-animator rotate-90',\n  hidden: 'svg-animator',\n};\n\nconst getOptionClass = (isVisible, isAnimating) =>\n  isVisible\n    ? optionListClassLists.visible\n    : isAnimating\n    ? optionListClassLists.hidden\n    : optionListClassLists.hiddenAnimOver;\n\nconst getOptionId = (parentId, index) => `${parentId}-option-${index}`;\nconst getOptionIndex = (parentId, optionId) =>\n  parseInt(optionId.slice(parentId.length + 8), 10);\n\nexport default class Listbox extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false,\n      isAnimating: false,\n    };\n  }\n\n  getRef = elem => {\n    this.elem = elem;\n  };\n\n  renderOption = (item, index) => {\n    return (\n      <OptionItem\n        id={getOptionId(this.props.id, index)}\n        key={index}\n        text={item}\n        isSelected={this.props.selectedIndex === index}\n      />\n    );\n  };\n\n  makeList = (item, index) => {\n    return this.props.items.map(this.renderOption, this);\n  };\n\n  setVisibility = throttle(throttleTime, visibility => {\n    this.setState(prevState => {\n      if (prevState.isVisible !== visibility) {\n        return {\n          isVisible: visibility,\n          isAnimating: true,\n        };\n      }\n    });\n  });\n\n  handleKeyDown = throttle(throttleTime, e => {\n    let isKnownKey = true;\n    switch (e.key) {\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        if (this.props.selectedIndex > 0) {\n          this.props.handleItemClick(\n            this.props.items[this.props.selectedIndex - 1],\n          );\n        }\n        break;\n\n      case 'ArrowDown':\n      case 'ArrowRight':\n        if (this.props.selectedIndex < this.props.items.length - 1) {\n          this.props.handleItemClick(\n            this.props.items[this.props.selectedIndex + 1],\n          );\n        }\n        break;\n\n      case 'Escape':\n        if (this.state.isVisible) {\n          this.setVisibility(false);\n        }\n        break;\n      case 'Enter':\n      case ' ': //Spacebar\n        this.setVisibility(!this.state.isVisible);\n        break;\n      default:\n        //unknown key\n        isKnownKey = false;\n    }\n    if (isKnownKey) {\n      e.preventDefault();\n    }\n  });\n\n  handleClick = e => {\n    const elem = e.target;\n\n    if (elem === this.elem || elem.parentElement === this.elem) {\n      this.setVisibility(!this.state.isVisible);\n    } else {\n      let optionId = elem.id || elem.parentElement.id;\n      this.props.handleItemClick(\n        this.props.items[getOptionIndex(this.props.id, optionId)],\n      );\n      this.setVisibility(false);\n    }\n  };\n\n  handleBlur = e => {\n    if (e.target === this.elem) {\n      this.setVisibility(false);\n    }\n  };\n\n  handleTransitionEnd = () =>\n    this.setState({\n      isAnimating: false,\n    });\n\n  render() {\n    return (\n      <div\n        ref={el => {\n          this.elem = el;\n        }}\n        id={this.props.id}\n        className=\"listbox listbox-theme\"\n        role=\"listbox\"\n        tabIndex={0}\n        aria-haspopup=\"true\"\n        aria-expanded={this.state.isVisible}\n        aria-activedescendant={getOptionId(\n          this.props.id,\n          this.props.selectedIndex,\n        )}\n        aria-labelledby={this.props.label || null}\n        aria-describedby={this.props.describer || null}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onTransitionEnd={this.handleTransitionEnd}\n      >\n        <div className=\"listbox-button listbox-button-theme\">\n          <div\n            aria-hidden=\"true\"\n            className={\n              this.state.isVisible\n                ? svgAnimatorClassList.visible\n                : svgAnimatorClassList.hidden\n            }\n          >\n            <FaCaretRight />\n          </div>\n          <span>{this.props.items[this.props.selectedIndex]}</span>\n        </div>\n        <ul\n          className={getOptionClass(\n            this.state.isVisible,\n            this.state.isAnimating,\n          )}\n        >\n          {this.makeList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nListbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  handleItemClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.string,\n  describer: PropTypes.string,\n};\n","import React from 'react';\nimport Listbox from '../components/Listbox';\nimport { getGameModeIndex } from '../selectors';\nimport { setGameMode } from '../actionCreators';\nimport { gameModeValues } from '../constants';\nimport { connect } from 'react-redux';\nimport '../css/top-bar.css';\n\nconst labelId = 'mode-label';\nconst listBoxId = 'mode-list';\n\nconst ModeSelect = ({ selectedIndex, handleItemClick }) => {\n  return (\n    <div className=\"top-bar\">\n      <span className=\"info-label\" id={labelId}>\n        mode\n      </span>\n      <Listbox\n        id={listBoxId}\n        items={gameModeValues}\n        label={labelId}\n        selectedIndex={selectedIndex}\n        handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  selectedIndex: getGameModeIndex(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleItemClick: mode => {\n    dispatch(setGameMode(mode));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ModeSelect);\n","import React, { PureComponent } from 'react';\nimport TicTacToeModeSelect from './TicTacToeModeSelect';\nimport PropTypes from 'prop-types';\n\nclass TicTacToeHeader extends PureComponent {\n  render() {\n    return (\n      <header>\n        <h1>TicTacToe</h1>\n        {this.props.isLargeScreen ? <TicTacToeModeSelect /> : null}\n      </header>\n    );\n  }\n}\n\nTicTacToeHeader.propTypes = {\n  isLargeScreen: PropTypes.bool.isRequired,\n};\n\nexport default TicTacToeHeader;\n","import React, { Component } from 'react';\nimport '../css/modal.css';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { $id, warn } from '../util/functionUtil';\nimport { rootId } from '../constants';\nimport { FaTimesCircle } from 'react-icons/fa';\n\nconst modalContentClass = [\n  'modal-hidden',\n  'modal-trans-hide',\n  'modal-visible',\n  'modal-visible modal-trans-show',\n];\nconst modalButtonClass = [\n  'modal-close-button-hidden',\n  'modal-close-button-hidden',\n  'modal-close-button-visible',\n  'modal-close-button-hidden',\n];\n\nconst mStates = {\n  HIDDEN: 0,\n  TRANS_HIDE: 1,\n  VISIBLE: 2,\n  TRANS_SHOW: 3,\n};\n\n/*Modal\n * instance fields:\n *  - modalRoot: the HTMLElement root of the modal\n *  - activator: the element that had focus before the activation of the modal,\n *               it will get the focus back when the modal is\n *               in state TRANS_HIDE\n *  - state:\n *               mState: - represents the current modal state,\n *               its value is one of the values of mStates enum\n */\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mState: mStates.HIDDEN,\n    };\n  }\n\n  getButtonRef = closeButton => {\n    this.closeButton = closeButton;\n  };\n\n  getModalContentRef = modalContent => {\n    this.modalContent = modalContent;\n  };\n\n  componentWillMount() {\n    this.modalRoot = $id('modal-root');\n    if (!this.modalRoot) {\n      this.modalRoot = document.createElement('div');\n      this.modalRoot.setAttribute('id', 'modal-root');\n      document.body.appendChild(this.modalRoot);\n    }\n    this.activator = null;\n  }\n\n  componentDidMount() {\n    this.modalRoot.className = modalContentClass[mStates.HIDDEN];\n    this.modalRoot.addEventListener('click', this.handleClickOutside);\n    this.modalRoot.addEventListener('animationend', this.handleAnimEnd);\n    /* a11y features for the modal\n     * screen readers will consider the modal hidden as soon as it is\n     * in TRANS_HIDE state\n     */\n    this.modalRoot.setAttribute('role', 'dialog');\n    this.modalRoot.setAttribute('aria-hidden', 'true');\n    this.changeState(this.props.shouldShow, mStates.VISIBLE);\n  }\n\n  componentWillUnmount() {\n    this.modalRoot.removeEventListener('click', this.handleClickOutside);\n    this.modalRoot.removeEventListener('animationend', this.handleAnimEnd);\n    this.modalRoot.removeAttribute('role');\n  }\n\n  changeState = (condition, nextState) => {\n    if (condition) {\n      this.setState({\n        mState: nextState,\n      });\n    }\n  };\n\n  show = () => {\n    if (this.state.mState === mStates.HIDDEN) {\n      this.setState({\n        mState: mStates.TRANS_SHOW,\n      });\n    }\n  };\n\n  hide = () => {\n    this.changeState(this.state.mState === mStates.VISIBLE, mStates.TRANS_HIDE);\n    this.props.close();\n  };\n\n  handleClickOutside = evt => {\n    if (evt.target.id === 'modal-root') {\n      //closes the window and bubbles up the event through the portal\n      this.closeButton.click();\n    }\n  };\n\n  handleKeyEvents = evt => {\n    if (this.state.mState !== mStates.VISIBLE) {\n      return;\n    }\n    switch (evt.key) {\n      case 'Escape': //closes the window and bubbles up the event through the portal\n        this.closeButton.click();\n        break;\n      case 'Tab': //shift+Tab or just Tab\n        evt.preventDefault();\n        break;\n      default:\n    }\n  };\n\n  blurCB = () => {\n    if (\n      this.closeButton && //it doesnt trigger if the component is unmounted\n      this.state.mState === mStates.VISIBLE &&\n      document.activeElement !== this.closeButton\n    ) {\n      this.closeButton.focus();\n    }\n  };\n\n  handleBlur = evt => {\n    setTimeout(this.blurCB, 10);\n  };\n\n  handleAnimEnd = evt => {\n    if (evt.target !== this.modalRoot) {\n      return;\n    }\n    let nextState = -1;\n    let err = null;\n    switch (this.state.mState) {\n      case mStates.TRANS_HIDE:\n        nextState = mStates.HIDDEN;\n        break;\n      case mStates.TRANS_SHOW:\n        nextState = mStates.VISIBLE;\n        break;\n      case mStates.HIDDEN:\n        err = 'hidden modals should not have animations';\n        break;\n      case mStates.VISIBLE:\n        break;\n      default:\n        err = `invalid state ${this.state.mState}`;\n    }\n    if (nextState >= mStates.HIDDEN && nextState <= mStates.TRANS_SHOW) {\n      this.setState({\n        mState: nextState,\n      });\n    } else {\n      warn(err);\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.changeState(\n      nextProps.shouldShow && this.state.mState === mStates.HIDDEN,\n      mStates.TRANS_SHOW,\n    );\n  }\n\n  updateDOM = () => {\n    switch (this.state.mState) {\n      case mStates.VISIBLE:\n        break;\n      case mStates.TRANS_SHOW:\n        document.body.style.overflow = 'hidden';\n        document.getElementById(rootId).setAttribute('aria-hidden', 'true');\n        this.modalRoot.setAttribute('aria-hidden', 'false');\n        break;\n      case mStates.TRANS_HIDE:\n        document.body.style.overflow = 'auto';\n        document.getElementById(rootId).removeAttribute('aria-hidden');\n        this.modalRoot.setAttribute('aria-hidden', 'true');\n        break;\n      case mStates.HIDDEN:\n        break;\n      default:\n        warn(`illegal state modal state: ${this.state.mState}`);\n    }\n    this.modalRoot.className = modalContentClass[this.state.mState];\n  };\n\n  componentDidUpdate() {\n    window.requestAnimationFrame(this.updateDOM);\n\n    const focused = document.activeElement;\n\n    if (this.state.mState === mStates.TRANS_SHOW) {\n      this.activator = document.activeElement;\n    }\n    if (this.state.mState === mStates.VISIBLE && focused !== this.closeButton) {\n      this.closeButton.focus();\n    }\n    if (this.state.mState === mStates.TRANS_HIDE && this.activator) {\n      this.activator.focus();\n      this.activator = null;\n    }\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      <div\n        id=\"modal-content\"\n        className={\n          this.state.mState === mStates.TRANS_HIDE\n            ? 'modal-content-trans-hide'\n            : null\n        }\n        ref={this.getModalContentRef}\n        onKeyDown={this.handleKeyEvents}\n        onBlur={this.handleBlur}\n        aria-label={this.props.title}\n      >\n        <button\n          type=\"button\"\n          onClick={this.hide}\n          id=\"modal-close-button\"\n          ref={this.getButtonRef}\n          className={modalButtonClass[this.state.mState]}\n          aria-label=\"close\"\n        >\n          <FaTimesCircle />\n        </button>\n        {this.props.children}\n      </div>,\n      this.modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  shouldShow: PropTypes.bool.isRequired,\n  children: PropTypes.any,\n  close: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\n\nconst plus = ' + ';\nconst or = ' | ';\nconst separator = ' - ';\n\nclass ModalTextContent extends Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return [\n      <section key={0}>\n        <h2>How to play</h2>\n        <p>\n          Place 3 crosses in a line to Win.\n          <br />\n          Select <em>easy, medium, unfair</em> to play against the ai or{' '}\n          <em>pvp</em> to play with a friend.\n        </p>\n      </section>,\n      <section key={1}>\n        <h2>Controls</h2>\n        <h3>Mouse/Touch</h3>\n        <p>\n          Left Click to place a cross.\n          <br />\n          Click on <em>new</em> to play a new game. Click on{' '}\n          <em>undo or redo</em> to replay previous turns.\n        </p>\n        <h3>Keyboard</h3>\n        <ul className=\"keybindings-list\">\n          <li>\n            <kbd>w</kbd> <kbd>a</kbd> <kbd>s</kbd> <kbd>d</kbd>\n            {separator}select a cell\n          </li>\n          <li>\n            <kbd>e</kbd>\n            {or}\n            <kbd>spacebar</kbd>\n            {or}\n            <kbd>enter</kbd>\n            {separator}place a cross\n          </li>\n          <li>\n            <kbd>n</kbd>\n            {separator}play a new game\n          </li>\n          <li>\n            <kbd>m</kbd>\n            {separator}select game mode\n          </li>\n          <li>\n            <kbd>ctrl</kbd>\n            {plus}\n            <kbd>z</kbd>\n            {separator}undo\n          </li>\n          <li>\n            <kbd>ctrl</kbd>\n            {plus}\n            <kbd>shift</kbd>\n            {plus}\n            <kbd>z</kbd>\n            {or}\n            <kbd>ctrl</kbd>\n            {plus}\n            <kbd>y</kbd>\n            {separator}redo\n          </li>\n        </ul>\n      </section>,\n      <section key={2}>\n        <h3>Author:</h3>\n        <em>Fabrizio Vitale</em>\n      </section>,\n    ];\n  }\n}\n\nexport default ModalTextContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTurn } from '../selectors';\nimport { areBoardsEqual } from '../util/functionUtil';\n\nconst TurnCounter = ({ turn }) => {\n  return <p className=\"info-label\">{`turn: ${turn}`}</p>;\n};\n\nconst mapStateToProps = state => ({\n  turn: getTurn(state),\n});\n\nconst connectOptions = {\n  areStatesEqual: areBoardsEqual,\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n  null,\n  connectOptions,\n)(TurnCounter);\n","import React, { PureComponent } from 'react';\nimport Modal from '../components/Modal';\nimport ModalTextContent from '../components/ModalTextContent';\nimport TicTacToeModeSelect from './TicTacToeModeSelect';\nimport PropTypes from 'prop-types';\nimport TurnCounter from './TurnCounter';\nimport { OPEN_MODAL, CLOSE_MODAL } from '../constants/actions';\nimport { getModalState } from '../selectors';\nimport '../css/infoBar.css';\nimport { connect } from 'react-redux';\n\nclass TicTacToeInfoBar extends PureComponent {\n  render() {\n    return this.props.isLargeScreen ? (\n      <footer>\n        <button type=\"button\" id=\"footer-button\" onClick={this.props.openModal}>\n          about\n        </button>\n        <TurnCounter />\n        <Modal\n          shouldShow={this.props.isModalOpen}\n          title=\"about section\"\n          close={this.props.closeModal}\n        >\n          <ModalTextContent />\n        </Modal>\n      </footer>\n    ) : (\n      <div className=\"info-bar\">\n        <TicTacToeModeSelect />\n        <button type=\"button\" id=\"footer-button\" onClick={this.props.openModal}>\n          about\n        </button>\n        <Modal\n          shouldShow={this.props.isModalOpen}\n          title=\"about section\"\n          close={this.props.closeModal}\n        >\n          <ModalTextContent />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nTicTacToeInfoBar.propTypes = {\n  isLargeScreen: PropTypes.bool.isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  openModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isModalOpen: getModalState(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: () => dispatch({ type: OPEN_MODAL }),\n  closeModal: () => dispatch({ type: CLOSE_MODAL }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TicTacToeInfoBar);\n","import React, { Component } from 'react';\nimport { warn } from '../util/functionUtil';\n\nconst dynamicLoader = loader => {\n  class DynamicLoader extends Component {\n    state = {\n      component: null,\n    };\n\n    storeComponent = esModule => {\n      this.setState({\n        component: esModule.default,\n      });\n    };\n\n    logFail = err => {\n      warn(`failed fetch: ${err}`);\n    };\n\n    componentDidMount() {\n      loader().then(this.storeComponent, this.logFail);\n    }\n\n    shouldComponentUpdate(_, nextState) {\n      return !!(this.state.component || nextState.component);\n    }\n\n    render() {\n      const Comp = this.state.component;\n\n      return Comp ? React.createElement(Comp, this.props) : null;\n    }\n  }\n\n  return DynamicLoader;\n};\n\nexport default dynamicLoader;\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\nimport { Provider } from 'react-redux';\nimport configureStore from '../configureStore';\nimport '../css/app.css';\nimport TicTacToeMain from './TicTacToeMain';\nimport TicTacToeHeader from './TicTacToeHeader';\nimport TicTacToeInfoBar from './TicTacToeInfoBar';\nimport { mediaQueryWidth } from '../constants';\nimport dynamicLoader from '../components/dynamicLoader';\n\nconst store = configureStore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.keybinder = dynamicLoader(() => import('./KeyBinder'));\n  }\n\n  mediaQCallback = matches => {\n    const content = [\n      <TicTacToeMain key={0} isLargeScreen={matches} />,\n      <TicTacToeInfoBar key={1} isLargeScreen={matches} />,\n    ];\n\n    return (\n      <Provider store={store}>\n        <div id=\"app\">\n          <this.keybinder />\n          <TicTacToeHeader isLargeScreen={matches} />\n          {matches ? content : content.reverse()}\n        </div>\n      </Provider>\n    );\n  };\n\n  render() {\n    return (\n      <MediaQuery query={mediaQueryWidth}>{this.mediaQCallback}</MediaQuery>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { rootId } from './constants';\n\nconst root = document.getElementById(rootId);\n\nif (root !== null) {\n  ReactDOM.render(<App />, root);\n  registerServiceWorker();\n} else {\n  console.error('React root element is not present');\n}\n","import { createSelector } from 'reselect';\nimport { symb, gameMode } from '../constants';\nimport { winnerLine } from '../util/boardUtil';\nimport { countNot } from '../util/stringUtil';\n\n/* -- simple selectors -- */\nexport const getBoard = state => state.game.present;\n\nexport const getModalState = state => state.isModalOpen;\n\nexport const getRow = ind => state =>\n  state.game.present.slice(3 * ind, 3 * ind + 3);\n\nexport const isCellEmpty = state => ind => getBoard(state)[ind] === symb.empty;\n\nexport const isPVP = state => state.gameMode === 'PVP';\n\nexport const shouldAiAct = state => !(isPVP(state) || isGameOver(state));\n\nexport const canPlayerPlaceSymb = state =>\n  (isPVP(state) || getNextPlayer(state) === symb.x) && !isGameOver(state);\n\nexport const getGameModeVal = state => gameMode[getGameModeKey(state)];\nexport const getGameModeKey = state => state.gameMode;\nexport const getGameModeIndex = state =>\n  Object.keys(gameMode).indexOf(getGameModeKey(state));\n\n/* -- reselect selectors -- */\nexport const getCol = [\n  createSelector(\n    getBoard,\n    board => `${board[0]}${board[3]}${board[6]}`,\n  ),\n  createSelector(\n    getBoard,\n    board => `${board[1]}${board[4]}${board[7]}`,\n  ),\n  createSelector(\n    getBoard,\n    board => `${board[2]}${board[5]}${board[8]}`,\n  ),\n];\n\nexport const getMainDiag = createSelector(\n  getBoard,\n  board => `${board[0]}${board[4]}${board[8]}`,\n);\n\nexport const getAntiDiag = createSelector(\n  getBoard,\n  board => `${board[2]}${board[4]}${board[6]}`,\n);\n\nexport const getTurn = createSelector(\n  getBoard,\n  countNot(symb.empty),\n);\n\nexport const getNextPlayer = createSelector(\n  getTurn,\n  turn => (turn % 2 === 0 ? symb.x : symb.o),\n);\n\nexport const getWinnerLine = createSelector(\n  getMainDiag,\n  getAntiDiag,\n  getRow(0),\n  getRow(1),\n  getRow(2),\n  ...getCol,\n  winnerLine,\n);\n\nexport const isGameOver = createSelector(\n  getWinnerLine,\n  getTurn,\n  (winLine, turn) => winLine !== -1 || turn > 8,\n);\n","//UNDO REDO SELECTORS\nimport { isPVP } from './gameSelectors';\n\nexport const canUndo = state =>\n  isPVP(state) ? state.game.past.length > 0 : state.game.past.length > 1;\n\nexport const canRedo = state =>\n  isPVP(state) ? state.game.future.length > 0 : state.game.future.length > 0;\n\nexport const isNew = state => !(canUndo(state) || canRedo(state));\n","export { canUndo, canRedo, isNew } from './undoRedoSelectors';\nexport {\n  getBoard,\n  getModalState,\n  getRow,\n  getCol,\n  getMainDiag,\n  getAntiDiag,\n  getTurn,\n  getNextPlayer,\n  getWinnerLine,\n  isGameOver,\n  isCellEmpty,\n  shouldAiAct,\n  canPlayerPlaceSymb,\n  getGameModeVal,\n  isPVP,\n  getGameModeKey,\n  getGameModeIndex,\n} from './gameSelectors';\n","export const setIn = (str, index, other) => {\n  return `${str.slice(0, index)}${other}${str.slice(index + 1)}`;\n};\n\nexport const countNot = char => str => {\n  let res = 0;\n\n  for (let i = 0, len = str.length; i < len; i++) {\n    if (str[i] !== char) {\n      res += 1;\n    }\n  }\n  return res;\n};\n","import { getBoard } from '../selectors';\n\nconst noop = () => {};\n\nexport const throttle = (span, func, thisArg) => {\n  let last = 0;\n  let context = thisArg || null;\n  return function throttler(...args) {\n    let now = Date.now();\n    if (now - last >= span) {\n      last = now;\n      return func.apply(context, args);\n    }\n  };\n};\n\nexport const $id = id => document.getElementById(id);\n\nexport const $disabled = elem => elem.hasAttribute('disabled');\n\nexport const areBoardsEqual = (next, prev) => getBoard(next) === getBoard(prev);\n\nexport const warn =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  window.console != null &&\n  typeof window.console.warn === 'function'\n    ? window.console.warn\n    : noop;\n"],"sourceRoot":""}