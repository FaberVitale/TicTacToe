{"version":3,"sources":["util/boardUtil.js","reducers/gameReducer.js","reducers/undoRedo.js","reducers/index.js","reducers/gameModeReducer.js","constants/actions.js","reducers/modalStateReducer.js","configureStore.js","components/BoardCell.js","ai/logicRunner.js","ai/logicSteps.js","ai/index.js","actionCreators/index.js","containers/TicTacToeRow.js","components/ControlBar.js","containers/TicTacToeControlBar.js","containers/TicTacToeMain.js","components/OptionItem.js","components/Listbox.js","containers/TicTacToeModeSelect.js","containers/TicTacToeHeader.js","components/Modal.js","components/ModalTextContent.js","containers/TurnCounter.js","containers/TicTacToeInfoBar.js","components/dynamicLoader.js","containers/App.js","registerServiceWorker.js","index.js","constants/index.js","selectors/gameSelectors.js","selectors/undoRedoSelectors.js","selectors/index.js","util/stringUtil.js","util/functionUtil.js"],"names":["winnerLine","i","len","arguments","length","_ref","undefined","_ref2","Object","_mnt_c_Users_Faber_Documents_Code_React_tictactoe_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","cell0","cell1","cell2","symb","empty","getCellThatCreatesFork","board","thisInd","thatInd","thisLine","lines","thatLine","thisCellInd","j","getEmptyCellIndex","lineIndex","line","getBoardInfo","_lines","_corners","_sides","xSingleScore","symbScore","x","xDoubleScore","oSingleScore","o","oDoubleScore","res","_mnt_c_Users_Faber_Documents_Code_React_tictactoe_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","single","double","corners","sides","_lines$i","indexOne","indexTwo","indexThree","push","edges","edge","side","initState","concat","Array","fill","join","jumpBack","past","present","future","times","slice","toConsumableArray","jumpForward","combineReducers","gameMode","state","action","type","payload","game","reducer","newPresent","advance","undoRedo","setIn","pos","isModalOpen","configureStore","middeware","applyMiddleware","thunk","createStore","cellStates","mapStateToCellClassName","mapStateToPClassName","BoardCell","_PureComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTouchStart","evt","isDisabled","handleClick","getRef","elem","buttonElem","cellIndex","id","prevCellState","inherits","createClass","key","value","cellState","document","activeElement","$disabled","blur","react_default","a","createElement","ref","className","onClick","onTouchStart","onAnimationEnd","handleAnimEnd","disabled","aria-label","ariaLabel","symbToA11y","aria-hidden","getPClassName","PureComponent","getCellState","indexOf","logicRunner","zeroTurnMove","otherMoves","turn","ai","other","boardInfo","move","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","otherMove","err","return","errMessage","emptyCells","prototype","reduce","aggr","index","warn","lineLogic","twoInLine","fork","_boardInfo$lines$ai$s","slicedToArray","b","possibleForkInd","c","_boardInfo$lines$othe","forkSpecialCases","filter","fBoard","takeIfEmpty","center","corner","opposite","opposingEdges","turnZeroLogic","Math","random","aiProfiles","_aiProfiles","defineProperty","PVAI_EASY","PVAI_MEDIUM","PVAI_UNFAIR","undoRedoAction","actionType","dispatch","getState","canPlayerPlaceSymb","isGameOver","isPVP","aiTimeoutCallback","newState","difficulty","getBoard","getTurn","cellIndexes","connectOptions","areStatesEqual","areBoardsEqual","connect","ownProps","rowVals","getRow","rowIndex","getWinnerLine","onCellClick","nextPlayer","getNextPlayer","isCellEmpty","shouldAiAct","setTimeout","map","ind","components_BoardCell","cellAriaLabel","renderSquare","ControlBar","target","currentTarget","targetClick","_this$props","isNewDisabled","onNewClick","isUndoDisabled","onUndoClick","isRedoDisabled","onRedoClick","isLargeScreen","elems","undo","reverse","redo","index_esm","isNew","canUndo","canRedo","TicTacToeMain","containers_TicTacToeRow","TicTacToeControlBar","OptionItem","role","aria-selected","isSelected","text","optionListClassLists","svgAnimatorClassList","getOptionId","parentId","getOptionIndex","optionId","parseInt","Listbox","renderOption","item","OptionItem_OptionItem","selectedIndex","makeList","items","assertThisInitialized","setVisibility","throttle","throttleTime","visibility","setState","prevState","isVisible","isAnimating","handleKeyDown","e","isKnownKey","handleItemClick","preventDefault","parentElement","handleBlur","handleTransitionEnd","_this2","el","tabIndex","aria-haspopup","aria-expanded","aria-activedescendant","aria-labelledby","label","aria-describedby","describer","onFocus","handleFocus","onBlur","onKeyDown","onTransitionEnd","fa_index_esm","getGameModeIndex","mode","val","gameModeInv","getGameModeKey","Listbox_Listbox","gameModeValues","TicTacToeHeader","TicTacToeModeSelect","modalContentClass","modalButtonClass","mStates","HIDDEN","TRANS_HIDE","VISIBLE","TRANS_SHOW","Modal","getButtonRef","closeButton","getModalContentRef","modalContent","changeState","condition","nextState","mState","show","hide","close","handleClickOutside","click","handleKeyEvents","blurCB","focus","modalRoot","updateDOM","body","style","overflow","getElementById","rootId","setAttribute","removeAttribute","$id","appendChild","activator","addEventListener","shouldShow","removeEventListener","nextProps","window","requestAnimationFrame","focused","ReactDOM","createPortal","title","children","Component","ModalTextContent","TicTacToeInfoBar","openModal","containers_TurnCounter","components_Modal","closeModal","components_ModalTextContent","getModalState","dynamicLoader","loader","_Component","DynamicLoader","_getPrototypeOf2","_len","args","_key","apply","component","storeComponent","esModule","default","logFail","then","_","Comp","React","store","App","mediaQCallback","matches","content","containers_TicTacToeMain","containers_TicTacToeInfoBar","es","keybinder","containers_TicTacToeHeader","__webpack_require__","bind","react_responsive_default","query","mediaQueryWidth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","root","render","containers_App","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","_symbToA11y","_symbScore","PVP","keys","easy","medium","unfair","pvp","0","8","2","6","getCol","createSelector","getMainDiag","getAntiDiag","countNot","winLine","d","__webpack_exports__","undoRedoSelectors_canUndo","undoRedoSelectors_canRedo","gameSelectors_isCellEmpty","gameSelectors_canPlayerPlaceSymb","gameSelectors_getGameModeIndex","str","char","_selectors__WEBPACK_IMPORTED_MODULE_0__","span","func","thisArg","last","context","now","Date","hasAttribute","prev"],"mappings":"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","file":"static/js/main.9d867820.chunk.js","sourcesContent":["import { symb, lines, symbScore, sides, edges } from '../constants';\n\nexport const winnerLine = (...lines) => {\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [cell0, cell1, cell2] = lines[i];\n\n    const isWinLine =\n      cell0 !== symb.empty && cell1 === cell0 && cell2 === cell0;\n\n    if (isWinLine) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nexport const getCellThatCreatesFork = (board, thisInd, thatInd) => {\n  const thisLine = lines[thisInd],\n    thatLine = lines[thatInd];\n\n  for (let i = 0; i < 3; i++) {\n    const thisCellInd = thisLine[i];\n\n    for (let j = 0; j < 3; j++) {\n      const thatCellInd = thatLine[j];\n      if (thisCellInd === thatCellInd && board[thisCellInd] === symb.empty) {\n        return thisCellInd;\n      }\n    }\n  }\n  return -1;\n};\n\nexport const getCommonEmptyCellIndex = (board, thisLineInd, thatLineInd) => {\n  for (let i = 0, len = lines[thisLineInd].length; i < len; i++) {\n    const cellInd = lines[thisLineInd][i];\n    if (\n      board[cellInd] === symb.empty &&\n      lines[thatLineInd].indexOf(cellInd) > -1\n    ) {\n      return cellInd;\n    }\n  }\n  return -1;\n};\n\nexport const getEmptyCellIndex = (board, lineIndex) => {\n  const line = lines[lineIndex];\n\n  for (let i = 0, len = line.length; i < len; i++) {\n    if (board[line[i]] === symb.empty) {\n      return line[i];\n    }\n  }\n  return -1;\n};\n\nexport const getBoardInfo = board => {\n  const xSingleScore = symbScore[symb.x],\n    xDoubleScore = 2 * xSingleScore;\n  const oSingleScore = symbScore[symb.o],\n    oDoubleScore = 2 * oSingleScore;\n\n  const res = {\n    lines: {\n      [symb.x]: {\n        single: [],\n        double: [],\n      },\n      [symb.o]: {\n        single: [],\n        double: [],\n      },\n    },\n    corners: {\n      [symb.x]: [],\n      [symb.o]: [],\n      [symb.empty]: [],\n    },\n\n    sides: {\n      [symb.x]: [],\n      [symb.o]: [],\n      [symb.empty]: [],\n    },\n  };\n\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [indexOne, indexTwo, indexThree] = lines[i];\n\n    const score =\n      symbScore[board[indexOne]] +\n      symbScore[board[indexTwo]] +\n      symbScore[board[indexThree]];\n\n    switch (score) {\n      case xSingleScore:\n        res.lines[symb.x].single.push(i);\n        break;\n      case xDoubleScore:\n        res.lines[symb.x].double.push(i);\n        break;\n      case oSingleScore:\n        res.lines[symb.o].single.push(i);\n        break;\n      case oDoubleScore:\n        res.lines[symb.o].double.push(i);\n        break;\n      default: // not added to res\n    }\n  }\n\n  //corners\n  for (let i = 0, len = edges.length; i < len; i++) {\n    const edge = edges[i];\n    res.corners[board[edge]].push(edge);\n  }\n\n  //sides\n  for (let i = 0, len = sides.length; i < len; i++) {\n    const side = sides[i];\n    res.sides[board[side]].push(side);\n  }\n\n  return res;\n};\n","import { symb } from '../constants';\nimport { PLACE_SIGN, PLACE_SIGN_AI } from '../constants/actions';\nimport { setIn } from '../util/stringUtil';\n\nconst initState = `${new Array(9).fill(symb.empty).join('')}`;\n\nexport default (state = initState, action) => {\n  if (action.type === PLACE_SIGN || action.type === PLACE_SIGN_AI) {\n    return setIn(state, action.payload.pos, action.payload.symb);\n  }\n  return state;\n};\n","//see http://redux.js.org/docs/recipes/ImplementingUndoHistory.html\nimport {\n  UNDO,\n  REDO,\n  NEW,\n  UNDO_AI,\n  REDO_AI,\n  CHANGE_GAME_MODE,\n} from '../constants/actions';\n\nconst UNDO_INIT = '@@UNDOREDO/INIT';\n\nconst jumpBack = (past, present, future, times) => {\n  if (times === 1) {\n    return {\n      past: past.slice(0, past.length - 1),\n      present: past[past.length - 1],\n      future: [present, ...future],\n    };\n  }\n  return {\n    past: past.slice(0, past.length - times),\n    present: past[past.length - times],\n    future: [...past.slice(past.length - times + 1), present, ...future],\n  };\n};\n\nconst jumpForward = (past, present, future, times) => ({\n  past: [...past, present, ...future.slice(0, times - 1)],\n  present: future[times - 1],\n  future: future.slice(times),\n});\n\nconst advance = (past, present, newPresent) => ({\n  past: [...past, present],\n  present: newPresent,\n  future: [],\n});\n\nexport default reducer => {\n  const initState = {\n    past: [],\n    present: reducer(undefined, { action: UNDO_INIT }), //the reducer provides the default state\n    future: [],\n  };\n\n  return (state = initState, action) => {\n    const { past, present, future } = state;\n    let times;\n\n    switch (action.type) {\n      case UNDO:\n        if (past.length < 1) {\n          return state;\n        }\n\n        return jumpBack(past, present, future, 1);\n\n      case REDO:\n        if (future.length < 1) {\n          return state;\n        }\n\n        return jumpForward(past, present, future, 1);\n\n      case NEW:\n        return initState;\n      case UNDO_AI:\n        if (past.length < 2) {\n          return state;\n        }\n        times = past.length % 2 !== 0 ? 1 : 2;\n\n        return jumpBack(past, present, future, times);\n\n      case REDO_AI:\n        times = future.length < 2 ? 1 : 2;\n        return jumpForward(past, present, future, times);\n\n      case CHANGE_GAME_MODE:\n        return initState;\n      default:\n        const newPresent = reducer(present, action);\n\n        if (newPresent === present) {\n          return state;\n        }\n\n        return advance(past, present, newPresent);\n    }\n  };\n};\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\nimport undoRedo from './undoRedo';\nimport gameModeReducer from './gameModeReducer';\nimport modalStateReducer from './modalStateReducer';\n\nexport default combineReducers({\n  gameMode: gameModeReducer,\n  game: undoRedo(gameReducer),\n  isModalOpen: modalStateReducer,\n});\n","import { CHANGE_GAME_MODE } from '../constants/actions';\nconst initState = 'PVAI_MEDIUM';\n\nexport default (state = initState, action) => {\n  if (action.type === CHANGE_GAME_MODE) {\n    return action.payload;\n  }\n  return state;\n};\n","export const PLACE_SIGN = 'PLACE_SIGN';\n\nexport const PLACE_SIGN_AI = 'PLACE_SIGN_AI';\n\nexport const NEW = 'NEW';\n\nexport const UNDO = 'UNDO';\n\nexport const REDO = 'REDO';\n\nexport const CHANGE_GAME_MODE = 'CHANGE_GAME_MODE';\n\nexport const UNDO_AI = 'UNDO_AI';\n\nexport const REDO_AI = 'REDO_AI';\n\nexport const OPEN_MODAL = 'OPEN_MODAL';\n\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n","import { OPEN_MODAL, CLOSE_MODAL } from '../constants/actions';\n\nconst initState = false;\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return true;\n    case CLOSE_MODAL:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport default (function buildConfigureStore() {\n  const middeware = applyMiddleware(thunk);\n\n  if (process.env.NODE_ENV === 'production') {\n    return () => createStore(reducer, middeware);\n  }\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return () => createStore(reducer, composeEnhancers(middeware));\n})();\n","import React, { PureComponent } from 'react';\nimport '../css/board-cell.css';\nimport PropTypes from 'prop-types';\nimport { symbToA11y } from '../constants';\nimport { lines } from '../constants';\nimport { $disabled } from '../util/functionUtil';\n\nexport const cellStates = {\n  IDLE: 0,\n  FILLED: 1,\n  VICTORY: 2,\n};\n\nconst mapStateToCellClassName = [\n  'board-cell idle',\n  'board-cell disabled',\n  'board-cell disabled victory',\n];\n\nconst mapStateToPClassName = ['empty', 'filled-animated', 'filled-animated'];\n\nconst BoardCell = class extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = props.handleClick(props.cellIndex);\n\n    this.id = `cell-${this.props.cellIndex}`;\n    this.prevCellState = -1;\n  }\n\n  handleTouchStart = evt => {\n    // touch events fire on disabled buttons\n    if (this.props.isDisabled) {\n      return;\n    }\n\n    this.handleClick();\n  };\n\n  componentWillUpdate() {\n    this.prevCellState = this.props.cellState;\n  }\n\n  getRef = elem => {\n    this.buttonElem = elem;\n  };\n  /* computes P className avoids fadeIn animations on undo*/\n  getPClassName() {\n    if (\n      this.prevCellState > -1 &&\n      this.prevCellState === cellStates.VICTORY &&\n      this.props.cellState === cellStates.FILLED\n    ) {\n      return 'filled';\n    }\n\n    return mapStateToPClassName[this.props.cellState];\n  }\n\n  componentDidUpdate() {\n    if (\n      document.activeElement === this.buttonElem &&\n      $disabled(this.buttonElem)\n    ) {\n      this.buttonElem.blur(); ///firefox keeps focused blurred buttons\n    }\n  }\n  render() {\n    return (\n      <button\n        type=\"button\"\n        id={this.id}\n        ref={this.getRef}\n        className={mapStateToCellClassName[this.props.cellState]}\n        onClick={this.handleClick}\n        onTouchStart={this.handleTouchStart}\n        onAnimationEnd={this.handleAnimEnd}\n        disabled={this.props.isDisabled}\n        aria-label={`${this.props.ariaLabel}: ${symbToA11y[this.props.value]}`}\n      >\n        <div className=\"victory-overlay\" aria-hidden=\"true\" />\n        <p className={this.getPClassName()}>{this.props.value}</p>\n      </button>\n    );\n  }\n};\n\nBoardCell.getCellState = (winnerLine, isDisabled, cellIndex) => {\n  let res;\n\n  if (winnerLine < 0) {\n    if (isDisabled) {\n      res = cellStates.FILLED;\n    } else {\n      res = cellStates.IDLE;\n    }\n  } else {\n    if (winnerLine > -1 && lines[winnerLine].indexOf(cellIndex) > -1) {\n      res = cellStates.VICTORY;\n    } else {\n      res = cellStates.FILLED;\n    }\n  }\n  return res;\n};\n\nBoardCell.propTypes = {\n  cellIndex: PropTypes.number.isRequired,\n  value: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  cellState: PropTypes.number.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n};\n\nexport default BoardCell;\n","import { symb } from '../constants';\nimport { getBoardInfo } from '../util/boardUtil';\nimport { warn } from '../util/functionUtil';\n\nexport default (zeroTurnMove, otherMoves = []) => (board, turn, ai) => {\n  if (turn === 0) {\n    return zeroTurnMove();\n  }\n\n  const other = ai === symb.x ? symb.o : symb.x;\n  const boardInfo = getBoardInfo(board);\n  let move = -1;\n\n  for (let otherMove of otherMoves) {\n    move = otherMove(board, boardInfo, ai, other, turn);\n    if (move > -1) {\n      return move;\n    }\n  }\n\n  //something went wrong...\n  let errMessage =\n    turn >= 9\n      ? \"this function shouldn't be called on a filled board\"\n      : 'ai logic error';\n\n  //recovery: try to return an empty cell if present\n  const emptyCells = Array.prototype.reduce.call(\n    board,\n    (aggr, next, index) =>\n      aggr > -1 ? aggr : next === symb.empty ? index : aggr,\n    -1,\n  );\n\n  if (emptyCells.length > 0) {\n    errMessage += '\\nrecovery: picked an empty cell';\n\n    move = emptyCells[0];\n  }\n\n  warn(errMessage);\n\n  return move;\n};\n","import { getEmptyCellIndex, getCellThatCreatesFork } from '../util/boardUtil';\nimport { symb, forkSpecialCases, opposingEdges } from '../constants';\n\nexport const lineLogic = {\n  twoInLine: (board, boardInfo, ai, other, turn) => {\n    if (turn < 3) {\n      return -1;\n    }\n    //twoInLine ai\n    if (boardInfo.lines[ai].double.length > 0) {\n      return getEmptyCellIndex(board, boardInfo.lines[ai].double[0]);\n    }\n\n    //twoinLine other\n    if (boardInfo.lines[other].double.length > 0) {\n      return getEmptyCellIndex(board, boardInfo.lines[other].double[0]);\n    }\n    return -1;\n  },\n\n  fork: (board, boardInfo, ai, other, turn) => {\n    if (turn < 3) {\n      return -1;\n    }\n\n    if (boardInfo.lines[ai].single.length > 1) {\n      const [a, b] = boardInfo.lines[ai].single;\n      let possibleForkInd = -1;\n\n      if (boardInfo.lines[ai].single.length > 2) {\n        const c = boardInfo.lines[ai].single[2];\n        possibleForkInd = getCellThatCreatesFork(board, b, c);\n\n        if (possibleForkInd < 0) {\n          possibleForkInd = getCellThatCreatesFork(board, a, c);\n        }\n      }\n      if (possibleForkInd < 0) {\n        possibleForkInd = getCellThatCreatesFork(board, a, b);\n      }\n\n      if (possibleForkInd > 0) {\n        return possibleForkInd;\n      }\n    }\n\n    //fork other\n    if (boardInfo.lines[other].single.length > 1) {\n      const [a, b] = boardInfo.lines[other].single;\n      let possibleForkInd = getCellThatCreatesFork(board, a, b);\n\n      if (boardInfo.lines[other].single.length > 2 && possibleForkInd < 0) {\n        const c = boardInfo.lines[other].single[2];\n        possibleForkInd = getCellThatCreatesFork(board, b, c);\n\n        if (possibleForkInd < 0) {\n          possibleForkInd = getCellThatCreatesFork(board, a, c);\n        }\n      }\n\n      if (possibleForkInd >= 0) {\n        //check if it is a special case\n        if (forkSpecialCases.filter(fBoard => fBoard === board).length > 0) {\n          return boardInfo.sides[symb.empty][0];\n        } else {\n          //place the symb on the forking cell\n          return possibleForkInd;\n        }\n      }\n    }\n    return -1;\n  },\n};\n\nexport const takeIfEmpty = {\n  center: board => (board[4] === symb.empty ? 4 : -1),\n\n  edge: (board, boardInfo, ai, other, turn) => {\n    //take opposite edge of an opponent if empty\n    for (let corner of boardInfo.corners[other]) {\n      const opposite = opposingEdges[corner];\n      if (board[opposite] === symb.empty) {\n        return opposite;\n      }\n    }\n    //take 1st empty edge\n    if (boardInfo.corners[symb.empty].length > 0) {\n      return boardInfo.corners[symb.empty][0];\n    }\n    return -1;\n  },\n\n  side: (board, boardInfo, ai, other, turn) => {\n    if (boardInfo.sides[symb.empty].length > 0) {\n      return boardInfo.sides[symb.empty][0];\n    }\n    return -1;\n  },\n};\n\nexport const turnZeroLogic = {\n  takeCenterOrEdges: () => (Math.random() * 5) << 1,\n  takeRandomCell: () => (Math.random * 9) >>> 0,\n};\n","import logicRunner from './logicRunner';\nimport { turnZeroLogic, takeIfEmpty, lineLogic } from './logicSteps';\nimport { gameMode } from '../constants';\n\nconst aiProfiles = {\n  [gameMode.PVAI_EASY]: logicRunner(turnZeroLogic.takeRandomCell, [\n    takeIfEmpty.side,\n    takeIfEmpty.center,\n    takeIfEmpty.edge,\n  ]),\n  [gameMode.PVAI_MEDIUM]: logicRunner(turnZeroLogic.takeCenterOrEdges, [\n    lineLogic.twoInLine,\n    takeIfEmpty.center,\n    takeIfEmpty.edge,\n    takeIfEmpty.side,\n  ]),\n  [gameMode.PVAI_UNFAIR]: logicRunner(turnZeroLogic.takeCenterOrEdges, [\n    lineLogic.twoInLine,\n    lineLogic.fork,\n    takeIfEmpty.center,\n    takeIfEmpty.edge,\n    takeIfEmpty.side,\n  ]),\n};\n\nexport const aiMove = (board, turn, ai, difficulty) => {\n  return aiProfiles[gameMode[difficulty]](board, turn, ai);\n};\n","import {\n  PLACE_SIGN,\n  CHANGE_GAME_MODE,\n  UNDO,\n  UNDO_AI,\n  REDO,\n  REDO_AI,\n  PLACE_SIGN_AI,\n} from '../constants/actions';\nimport {\n  getNextPlayer,\n  getBoard,\n  getTurn,\n  shouldAiAct,\n  canPlayerPlaceSymb,\n  getGameModeKey,\n  isPVP,\n  isGameOver,\n  isCellEmpty,\n} from '../selectors';\nimport { aiMove } from '../ai';\nimport { symb, gameModeInv } from '../constants';\nimport { warn } from '../util/functionUtil';\n\n// Timeout of aiTimeoutCallback\nconst AI_DELAY = 100;\n\nexport const setGameMode = val => (dispatch, getState) => {\n  const key = gameModeInv[val];\n  if (key && getGameModeKey(getState()) !== key) {\n    dispatch({\n      type: CHANGE_GAME_MODE,\n      payload: key,\n    });\n  }\n};\n\nexport const undoRedoAction = actionType => (dispatch, getState) => {\n  const state = getState();\n  if (!canPlayerPlaceSymb(state) && !isGameOver(state)) {\n    return;\n  }\n\n  if (!isPVP(state)) {\n    switch (actionType) {\n      case UNDO:\n        dispatch({ type: UNDO_AI });\n        break;\n      case REDO:\n        dispatch({ type: REDO_AI });\n        break;\n      default:\n        warn(\n          `undoRedoAction recieved an unknown action: ${actionType}\n          it accepts only UNDO, REDO actions`,\n        );\n    }\n  } else if (actionType) {\n    dispatch({ type: actionType });\n  }\n};\n\nconst aiTimeoutCallback = (dispatch, newState) => {\n  const pos = aiMove(\n    getBoard(newState),\n    getTurn(newState),\n    symb.o,\n    newState.gameMode,\n  );\n\n  dispatch({\n    type: PLACE_SIGN_AI,\n    payload: {\n      pos,\n      symb: symb.o,\n    },\n  });\n};\n\nexport const placeSign = pos => (dispatch, getState) => {\n  const state = getState();\n\n  const nextPlayer = getNextPlayer(state);\n\n  if (!(canPlayerPlaceSymb(state) && isCellEmpty(state)(pos))) {\n    return;\n  }\n\n  dispatch({\n    type: PLACE_SIGN,\n    payload: {\n      pos,\n      symb: nextPlayer,\n    },\n  });\n\n  const newState = getState();\n\n  if (shouldAiAct(newState)) {\n    setTimeout(aiTimeoutCallback, AI_DELAY, dispatch, newState);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport BoardCell from '../components/BoardCell';\nimport { getRow, isGameOver, getWinnerLine } from '../selectors';\nimport { symb, cellAriaLabel } from '../constants';\nimport { placeSign } from '../actionCreators';\nimport '../css/board-row.css';\nimport propTypes from 'prop-types';\nimport { areBoardsEqual } from '../util/functionUtil';\n\nconst cellIndexes = [0, 1, 2];\n\nconst renderSquare = (cellIndex, onCellClick, value, cellState, isDisabled) => {\n  return (\n    <BoardCell\n      key={cellIndex}\n      cellIndex={cellIndex}\n      handleClick={onCellClick}\n      value={value}\n      isDisabled={isDisabled}\n      cellState={cellState}\n      ariaLabel={cellAriaLabel[cellIndex]}\n    />\n  );\n};\n\nconst TicTacToeRow = ({\n  rowIndex,\n  onCellClick,\n  rowVals,\n  isGameOver,\n  winnerLine,\n}) => {\n  return (\n    <div className=\"board-row\">\n      {cellIndexes.map(ind => {\n        const value = rowVals[ind];\n        const cellIndex = 3 * rowIndex + ind;\n        const isDisabled = value !== symb.empty || isGameOver;\n        const cellState = BoardCell.getCellState(\n          winnerLine,\n          isDisabled,\n          cellIndex,\n        );\n\n        return renderSquare(\n          cellIndex,\n          onCellClick,\n          value,\n          cellState,\n          isDisabled,\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  rowVals: getRow(ownProps.rowIndex)(state),\n  isGameOver: isGameOver(state),\n  winnerLine: getWinnerLine(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCellClick: cellIndex => () => dispatch(placeSign(cellIndex)),\n});\n\nconst connectOptions = {\n  areStatesEqual: areBoardsEqual,\n};\n\nTicTacToeRow.propTypes = {\n  rowIndex: propTypes.number.isRequired,\n  onCellClick: propTypes.func.isRequired,\n  rowVals: propTypes.string.isRequired,\n  isGameOver: propTypes.bool.isRequired,\n  winnerLine: propTypes.number.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  connectOptions,\n)(TicTacToeRow);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/control-bar.css';\nimport { MdUndo, MdRedo } from 'react-icons/md';\nimport { $disabled } from '../util/functionUtil';\n\nclass ControlBar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.targetClick = null;\n  }\n\n  handleClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      return;\n    }\n\n    this.targetClick = evt.target;\n  };\n\n  componentDidUpdate() {\n    if (this.targetClick && $disabled(this.targetClick)) {\n      this.targetClick.blur();\n      this.targetClick = null;\n    }\n  }\n\n  render() {\n    const {\n      isNewDisabled,\n      onNewClick,\n      isUndoDisabled,\n      onUndoClick,\n      isRedoDisabled,\n      onRedoClick,\n      isLargeScreen,\n    } = this.props;\n\n    const elems = [\n      <button\n        key={0}\n        type=\"button\"\n        aria-label=\"new\"\n        id=\"new\"\n        className=\"control-bar-button\"\n        disabled={isNewDisabled}\n        onClick={onNewClick}\n      >\n        new\n      </button>,\n      <button\n        key={1}\n        type=\"button\"\n        aria-label=\"undo\"\n        id=\"undo\"\n        className=\"control-bar-button\"\n        disabled={isUndoDisabled}\n        onClick={onUndoClick}\n      >\n        {ControlBar.undo[+isLargeScreen]}\n      </button>,\n    ];\n\n    return (\n      <div className=\"control-bar\" ref={this.getRef} onClick={this.handleClick}>\n        {this.props.isLargeScreen ? elems : elems.reverse()}\n        <button\n          type=\"button\"\n          aria-label=\"redo\"\n          id=\"redo\"\n          className=\"control-bar-button\"\n          disabled={isRedoDisabled}\n          onClick={onRedoClick}\n        >\n          {ControlBar.redo[+isLargeScreen]}\n        </button>\n      </div>\n    );\n  }\n}\n\nControlBar.redo = [<MdRedo />, 'redo'];\n\nControlBar.undo = [<MdUndo />, 'undo'];\n\nControlBar.propTypes = {\n  isNewDisabled: PropTypes.bool.isRequired,\n  isUndoDisabled: PropTypes.bool.isRequired,\n  isRedoDisabled: PropTypes.bool.isRequired,\n  onNewClick: PropTypes.func.isRequired,\n  onUndoClick: PropTypes.func.isRequired,\n  onRedoClick: PropTypes.func.isRequired,\n  isLargeScreen: PropTypes.bool.isRequired,\n};\n\nexport default ControlBar;\n","import { connect } from 'react-redux';\nimport { NEW, UNDO, REDO } from '../constants/actions';\nimport { canUndo, canRedo, isNew } from '../selectors';\nimport ControlBar from '../components/ControlBar';\nimport { undoRedoAction } from '../actionCreators';\n\nconst mapStateToProps = state => ({\n  isNewDisabled: isNew(state),\n  isUndoDisabled: !canUndo(state),\n  isRedoDisabled: !canRedo(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onNewClick: () => dispatch({ type: NEW }),\n  onUndoClick: () => dispatch(undoRedoAction(UNDO)),\n  onRedoClick: () => dispatch(undoRedoAction(REDO)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ControlBar);\n","import React, { PureComponent } from 'react';\nimport TicTacToeRow from './TicTacToeRow';\nimport TicTacToeControlBar from './TicTacToeControlBar';\nimport '../css/board.css';\nimport PropTypes from 'prop-types';\n\nclass TicTacToeMain extends PureComponent {\n  render() {\n    /*\n     * reorder markup in order to not mess up\n     *  the focus order for mobile screen-readers\n     */\n    const elems = [\n      <div className=\"board\" key={0}>\n        <TicTacToeRow rowIndex={0} />\n        <div className=\"row-separator\" aria-hidden=\"true\" />\n        <TicTacToeRow rowIndex={1} />\n        <div className=\"row-separator\" aria-hidden=\"true\" />\n        <TicTacToeRow rowIndex={2} />\n      </div>,\n      <TicTacToeControlBar isLargeScreen={this.props.isLargeScreen} key={1} />,\n    ];\n    return <main>{this.props.isLargeScreen ? elems : elems.reverse()}</main>;\n  }\n}\n\nTicTacToeMain.propTypes = {\n  isLargeScreen: PropTypes.bool.isRequired,\n};\n\nexport default TicTacToeMain;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class OptionItem extends PureComponent {\n  render() {\n    return (\n      <li\n        className=\"option-item option-item-theme\"\n        role=\"option\"\n        aria-selected={this.props.isSelected}\n        id={this.props.id}\n      >\n        <span>{this.props.isSelected ? '✓' : ' '}</span>\n        <span>{this.props.text}</span>\n      </li>\n    );\n  }\n}\n\nOptionItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport '../css/listbox.css';\nimport { FaCaretRight } from 'react-icons/fa';\nimport OptionItem from './OptionItem';\nimport PropTypes from 'prop-types';\nimport { throttle } from '../util/functionUtil';\nimport { throttleTime } from '../constants';\n\nconst optionListClassLists = {\n  visible: 'option-list option-list-theme option-list-visible',\n  hidden: 'option-list option-list-theme option-list-hidden',\n  hiddenAnimOver: 'option-list option-list-theme option-list-anim-over',\n};\n\nconst svgAnimatorClassList = {\n  visible: 'svg-animator rotate-90',\n  hidden: 'svg-animator',\n};\n\nconst getOptionClass = (isVisible, isAnimating) =>\n  isVisible\n    ? optionListClassLists.visible\n    : isAnimating\n    ? optionListClassLists.hidden\n    : optionListClassLists.hiddenAnimOver;\n\nconst getOptionId = (parentId, index) => `${parentId}-option-${index}`;\nconst getOptionIndex = (parentId, optionId) =>\n  parseInt(optionId.slice(parentId.length + 8), 10);\n\nexport default class Listbox extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false,\n      isAnimating: false,\n    };\n  }\n\n  getRef = elem => {\n    this.elem = elem;\n  };\n\n  renderOption = (item, index) => {\n    return (\n      <OptionItem\n        id={getOptionId(this.props.id, index)}\n        key={index}\n        text={item}\n        isSelected={this.props.selectedIndex === index}\n      />\n    );\n  };\n\n  makeList = (item, index) => {\n    return this.props.items.map(this.renderOption, this);\n  };\n\n  setVisibility = throttle(throttleTime, visibility => {\n    this.setState(prevState => {\n      if (prevState.isVisible !== visibility) {\n        return {\n          isVisible: visibility,\n          isAnimating: true,\n        };\n      }\n    });\n  });\n\n  handleKeyDown = throttle(throttleTime, e => {\n    let isKnownKey = true;\n    switch (e.key) {\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        if (this.props.selectedIndex > 0) {\n          this.props.handleItemClick(\n            this.props.items[this.props.selectedIndex - 1],\n          );\n        }\n        break;\n\n      case 'ArrowDown':\n      case 'ArrowRight':\n        if (this.props.selectedIndex < this.props.items.length - 1) {\n          this.props.handleItemClick(\n            this.props.items[this.props.selectedIndex + 1],\n          );\n        }\n        break;\n\n      case 'Escape':\n        if (this.state.isVisible) {\n          this.setVisibility(false);\n        }\n        break;\n      case 'Enter':\n      case ' ': //Spacebar\n        this.setVisibility(!this.state.isVisible);\n        break;\n      default:\n        //unknown key\n        isKnownKey = false;\n    }\n    if (isKnownKey) {\n      e.preventDefault();\n    }\n  });\n\n  handleClick = e => {\n    const elem = e.target;\n\n    if (elem === this.elem || elem.parentElement === this.elem) {\n      this.setVisibility(!this.state.isVisible);\n    } else {\n      let optionId = elem.id || elem.parentElement.id;\n      this.props.handleItemClick(\n        this.props.items[getOptionIndex(this.props.id, optionId)],\n      );\n      this.setVisibility(false);\n    }\n  };\n\n  handleBlur = e => {\n    if (e.target === this.elem) {\n      this.setVisibility(false);\n    }\n  };\n\n  handleTransitionEnd = () =>\n    this.setState({\n      isAnimating: false,\n    });\n\n  render() {\n    return (\n      <div\n        ref={el => {\n          this.elem = el;\n        }}\n        id={this.props.id}\n        className=\"listbox listbox-theme\"\n        role=\"listbox\"\n        tabIndex={0}\n        aria-haspopup=\"true\"\n        aria-expanded={this.state.isVisible}\n        aria-activedescendant={getOptionId(\n          this.props.id,\n          this.props.selectedIndex,\n        )}\n        aria-labelledby={this.props.label || null}\n        aria-describedby={this.props.describer || null}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onTransitionEnd={this.handleTransitionEnd}\n      >\n        <div className=\"listbox-button listbox-button-theme\">\n          <div\n            aria-hidden=\"true\"\n            className={\n              this.state.isVisible\n                ? svgAnimatorClassList.visible\n                : svgAnimatorClassList.hidden\n            }\n          >\n            <FaCaretRight />\n          </div>\n          <span>{this.props.items[this.props.selectedIndex]}</span>\n        </div>\n        <ul\n          className={getOptionClass(\n            this.state.isVisible,\n            this.state.isAnimating,\n          )}\n        >\n          {this.makeList()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nListbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  handleItemClick: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.string,\n  describer: PropTypes.string,\n};\n","import React from 'react';\nimport Listbox from '../components/Listbox';\nimport { getGameModeIndex } from '../selectors';\nimport { setGameMode } from '../actionCreators';\nimport { gameModeValues } from '../constants';\nimport { connect } from 'react-redux';\nimport '../css/top-bar.css';\n\nconst labelId = 'mode-label';\nconst listBoxId = 'mode-list';\n\nconst ModeSelect = ({ selectedIndex, handleItemClick }) => {\n  return (\n    <div className=\"top-bar\">\n      <span className=\"info-label\" id={labelId}>\n        mode\n      </span>\n      <Listbox\n        id={listBoxId}\n        items={gameModeValues}\n        label={labelId}\n        selectedIndex={selectedIndex}\n        handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  selectedIndex: getGameModeIndex(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleItemClick: mode => {\n    dispatch(setGameMode(mode));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ModeSelect);\n","import React, { PureComponent } from 'react';\nimport TicTacToeModeSelect from './TicTacToeModeSelect';\nimport PropTypes from 'prop-types';\n\nclass TicTacToeHeader extends PureComponent {\n  render() {\n    return (\n      <header>\n        <h1>TicTacToe</h1>\n        {this.props.isLargeScreen ? <TicTacToeModeSelect /> : null}\n      </header>\n    );\n  }\n}\n\nTicTacToeHeader.propTypes = {\n  isLargeScreen: PropTypes.bool.isRequired,\n};\n\nexport default TicTacToeHeader;\n","import React, { Component } from 'react';\nimport '../css/modal.css';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { $id, warn } from '../util/functionUtil';\nimport { rootId } from '../constants';\nimport { FaTimesCircle } from 'react-icons/fa';\n\nconst modalContentClass = [\n  'modal-hidden',\n  'modal-trans-hide',\n  'modal-visible',\n  'modal-visible modal-trans-show',\n];\nconst modalButtonClass = [\n  'modal-close-button-hidden',\n  'modal-close-button-hidden',\n  'modal-close-button-visible',\n  'modal-close-button-hidden',\n];\n\nconst mStates = {\n  HIDDEN: 0,\n  TRANS_HIDE: 1,\n  VISIBLE: 2,\n  TRANS_SHOW: 3,\n};\n\n/*Modal\n * instance fields:\n *  - modalRoot: the HTMLElement root of the modal\n *  - activator: the element that had focus before the activation of the modal,\n *               it will get the focus back when the modal is\n *               in state TRANS_HIDE\n *  - state:\n *               mState: - represents the current modal state,\n *               its value is one of the values of mStates enum\n */\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mState: mStates.HIDDEN,\n    };\n  }\n\n  getButtonRef = closeButton => {\n    this.closeButton = closeButton;\n  };\n\n  getModalContentRef = modalContent => {\n    this.modalContent = modalContent;\n  };\n\n  componentWillMount() {\n    this.modalRoot = $id('modal-root');\n    if (!this.modalRoot) {\n      this.modalRoot = document.createElement('div');\n      this.modalRoot.setAttribute('id', 'modal-root');\n      document.body.appendChild(this.modalRoot);\n    }\n    this.activator = null;\n  }\n\n  componentDidMount() {\n    this.modalRoot.className = modalContentClass[mStates.HIDDEN];\n    this.modalRoot.addEventListener('click', this.handleClickOutside);\n    this.modalRoot.addEventListener('animationend', this.handleAnimEnd);\n    /* a11y features for the modal\n     * screen readers will consider the modal hidden as soon as it is\n     * in TRANS_HIDE state\n     */\n    this.modalRoot.setAttribute('role', 'dialog');\n    this.modalRoot.setAttribute('aria-hidden', 'true');\n    this.changeState(this.props.shouldShow, mStates.VISIBLE);\n  }\n\n  componentWillUnmount() {\n    this.modalRoot.removeEventListener('click', this.handleClickOutside);\n    this.modalRoot.removeEventListener('animationend', this.handleAnimEnd);\n    this.modalRoot.removeAttribute('role');\n  }\n\n  changeState = (condition, nextState) => {\n    if (condition) {\n      this.setState({\n        mState: nextState,\n      });\n    }\n  };\n\n  show = () => {\n    if (this.state.mState === mStates.HIDDEN) {\n      this.setState({\n        mState: mStates.TRANS_SHOW,\n      });\n    }\n  };\n\n  hide = () => {\n    this.changeState(this.state.mState === mStates.VISIBLE, mStates.TRANS_HIDE);\n    this.props.close();\n  };\n\n  handleClickOutside = evt => {\n    if (evt.target.id === 'modal-root') {\n      //closes the window and bubbles up the event through the portal\n      this.closeButton.click();\n    }\n  };\n\n  handleKeyEvents = evt => {\n    if (this.state.mState !== mStates.VISIBLE) {\n      return;\n    }\n    switch (evt.key) {\n      case 'Escape': //closes the window and bubbles up the event through the portal\n        this.closeButton.click();\n        break;\n      case 'Tab': //shift+Tab or just Tab\n        evt.preventDefault();\n        break;\n      default:\n    }\n  };\n\n  blurCB = () => {\n    if (\n      this.closeButton && //it doesnt trigger if the component is unmounted\n      this.state.mState === mStates.VISIBLE &&\n      document.activeElement !== this.closeButton\n    ) {\n      this.closeButton.focus();\n    }\n  };\n\n  handleBlur = evt => {\n    setTimeout(this.blurCB, 10);\n  };\n\n  handleAnimEnd = evt => {\n    if (evt.target !== this.modalRoot) {\n      return;\n    }\n    let nextState = -1;\n    let err = null;\n    switch (this.state.mState) {\n      case mStates.TRANS_HIDE:\n        nextState = mStates.HIDDEN;\n        break;\n      case mStates.TRANS_SHOW:\n        nextState = mStates.VISIBLE;\n        break;\n      case mStates.HIDDEN:\n        err = 'hidden modals should not have animations';\n        break;\n      case mStates.VISIBLE:\n        break;\n      default:\n        err = `invalid state ${this.state.mState}`;\n    }\n    if (nextState >= mStates.HIDDEN && nextState <= mStates.TRANS_SHOW) {\n      this.setState({\n        mState: nextState,\n      });\n    } else {\n      warn(err);\n    }\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.changeState(\n      nextProps.shouldShow && this.state.mState === mStates.HIDDEN,\n      mStates.TRANS_SHOW,\n    );\n  }\n\n  updateDOM = () => {\n    switch (this.state.mState) {\n      case mStates.VISIBLE:\n        break;\n      case mStates.TRANS_SHOW:\n        document.body.style.overflow = 'hidden';\n        document.getElementById(rootId).setAttribute('aria-hidden', 'true');\n        this.modalRoot.setAttribute('aria-hidden', 'false');\n        break;\n      case mStates.TRANS_HIDE:\n        document.body.style.overflow = 'auto';\n        document.getElementById(rootId).removeAttribute('aria-hidden');\n        this.modalRoot.setAttribute('aria-hidden', 'true');\n        break;\n      case mStates.HIDDEN:\n        break;\n      default:\n        warn(`illegal state modal state: ${this.state.mState}`);\n    }\n    this.modalRoot.className = modalContentClass[this.state.mState];\n  };\n\n  componentDidUpdate() {\n    window.requestAnimationFrame(this.updateDOM);\n\n    const focused = document.activeElement;\n\n    if (this.state.mState === mStates.TRANS_SHOW) {\n      this.activator = document.activeElement;\n    }\n    if (this.state.mState === mStates.VISIBLE && focused !== this.closeButton) {\n      this.closeButton.focus();\n    }\n    if (this.state.mState === mStates.TRANS_HIDE && this.activator) {\n      this.activator.focus();\n      this.activator = null;\n    }\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      <div\n        id=\"modal-content\"\n        className={\n          this.state.mState === mStates.TRANS_HIDE\n            ? 'modal-content-trans-hide'\n            : null\n        }\n        ref={this.getModalContentRef}\n        onKeyDown={this.handleKeyEvents}\n        onBlur={this.handleBlur}\n        aria-label={this.props.title}\n      >\n        <button\n          type=\"button\"\n          onClick={this.hide}\n          id=\"modal-close-button\"\n          ref={this.getButtonRef}\n          className={modalButtonClass[this.state.mState]}\n          aria-label=\"close\"\n        >\n          <FaTimesCircle />\n        </button>\n        {this.props.children}\n      </div>,\n      this.modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  shouldShow: PropTypes.bool.isRequired,\n  children: PropTypes.any,\n  close: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\n\nconst plus = ' + ';\nconst or = ' | ';\nconst separator = ' - ';\n\nclass ModalTextContent extends Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return [\n      <section key={0}>\n        <h2>How to play</h2>\n        <p>\n          Place 3 crosses in a line to Win.\n          <br />\n          Select <em>easy, medium, unfair</em> to play against the ai or{' '}\n          <em>pvp</em> to play with a friend.\n        </p>\n      </section>,\n      <section key={1}>\n        <h2>Controls</h2>\n        <h3>Mouse/Touch</h3>\n        <p>\n          Left Click to place a cross.\n          <br />\n          Click on <em>new</em> to play a new game. Click on{' '}\n          <em>undo or redo</em> to replay previous turns.\n        </p>\n        <h3>Keyboard</h3>\n        <ul className=\"keybindings-list\">\n          <li>\n            <kbd>w</kbd> <kbd>a</kbd> <kbd>s</kbd> <kbd>d</kbd>\n            {separator}select a cell\n          </li>\n          <li>\n            <kbd>e</kbd>\n            {or}\n            <kbd>spacebar</kbd>\n            {or}\n            <kbd>enter</kbd>\n            {separator}place a cross\n          </li>\n          <li>\n            <kbd>n</kbd>\n            {separator}play a new game\n          </li>\n          <li>\n            <kbd>m</kbd>\n            {separator}select game mode\n          </li>\n          <li>\n            <kbd>ctrl</kbd>\n            {plus}\n            <kbd>z</kbd>\n            {separator}undo\n          </li>\n          <li>\n            <kbd>ctrl</kbd>\n            {plus}\n            <kbd>shift</kbd>\n            {plus}\n            <kbd>z</kbd>\n            {or}\n            <kbd>ctrl</kbd>\n            {plus}\n            <kbd>y</kbd>\n            {separator}redo\n          </li>\n        </ul>\n      </section>,\n      <section key={2}>\n        <h3>Author:</h3>\n        <em>Fabrizio Vitale</em>\n      </section>,\n    ];\n  }\n}\n\nexport default ModalTextContent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getTurn } from '../selectors';\nimport { areBoardsEqual } from '../util/functionUtil';\n\nconst TurnCounter = ({ turn }) => {\n  return <p className=\"info-label\">{`turn: ${turn}`}</p>;\n};\n\nconst mapStateToProps = state => ({\n  turn: getTurn(state),\n});\n\nconst connectOptions = {\n  areStatesEqual: areBoardsEqual,\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n  null,\n  connectOptions,\n)(TurnCounter);\n","import React, { PureComponent } from 'react';\nimport Modal from '../components/Modal';\nimport ModalTextContent from '../components/ModalTextContent';\nimport TicTacToeModeSelect from './TicTacToeModeSelect';\nimport PropTypes from 'prop-types';\nimport TurnCounter from './TurnCounter';\nimport { OPEN_MODAL, CLOSE_MODAL } from '../constants/actions';\nimport { getModalState } from '../selectors';\nimport '../css/infoBar.css';\nimport { connect } from 'react-redux';\n\nclass TicTacToeInfoBar extends PureComponent {\n  render() {\n    return this.props.isLargeScreen ? (\n      <footer>\n        <button type=\"button\" id=\"footer-button\" onClick={this.props.openModal}>\n          about\n        </button>\n        <TurnCounter />\n        <Modal\n          shouldShow={this.props.isModalOpen}\n          title=\"about section\"\n          close={this.props.closeModal}\n        >\n          <ModalTextContent />\n        </Modal>\n      </footer>\n    ) : (\n      <div className=\"info-bar\">\n        <TicTacToeModeSelect />\n        <button type=\"button\" id=\"footer-button\" onClick={this.props.openModal}>\n          about\n        </button>\n        <Modal\n          shouldShow={this.props.isModalOpen}\n          title=\"about section\"\n          close={this.props.closeModal}\n        >\n          <ModalTextContent />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nTicTacToeInfoBar.propTypes = {\n  isLargeScreen: PropTypes.bool.isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  openModal: PropTypes.func.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isModalOpen: getModalState(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openModal: () => dispatch({ type: OPEN_MODAL }),\n  closeModal: () => dispatch({ type: CLOSE_MODAL }),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TicTacToeInfoBar);\n","import React, { Component } from 'react';\nimport { warn } from '../util/functionUtil';\n\nconst dynamicLoader = loader => {\n  class DynamicLoader extends Component {\n    state = {\n      component: null,\n    };\n\n    storeComponent = esModule => {\n      this.setState({\n        component: esModule.default,\n      });\n    };\n\n    logFail = err => {\n      warn(`failed fetch: ${err}`);\n    };\n\n    componentDidMount() {\n      loader().then(this.storeComponent, this.logFail);\n    }\n\n    shouldComponentUpdate(_, nextState) {\n      return !!(this.state.component || nextState.component);\n    }\n\n    render() {\n      const Comp = this.state.component;\n\n      return Comp ? React.createElement(Comp, this.props) : null;\n    }\n  }\n\n  return DynamicLoader;\n};\n\nexport default dynamicLoader;\n","import React, { Component } from 'react';\nimport MediaQuery from 'react-responsive';\nimport { Provider } from 'react-redux';\nimport configureStore from '../configureStore';\nimport '../css/app.css';\nimport TicTacToeMain from './TicTacToeMain';\nimport TicTacToeHeader from './TicTacToeHeader';\nimport TicTacToeInfoBar from './TicTacToeInfoBar';\nimport { mediaQueryWidth } from '../constants';\nimport dynamicLoader from '../components/dynamicLoader';\n\nconst store = configureStore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.keybinder = dynamicLoader(() => import('./KeyBinder'));\n  }\n\n  mediaQCallback = matches => {\n    const content = [\n      <TicTacToeMain key={0} isLargeScreen={matches} />,\n      <TicTacToeInfoBar key={1} isLargeScreen={matches} />,\n    ];\n\n    return (\n      <Provider store={store}>\n        <div id=\"app\">\n          <this.keybinder />\n          <TicTacToeHeader isLargeScreen={matches} />\n          {matches ? content : content.reverse()}\n        </div>\n      </Provider>\n    );\n  };\n\n  render() {\n    return (\n      <MediaQuery query={mediaQueryWidth}>{this.mediaQCallback}</MediaQuery>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { rootId } from './constants';\n\nconst root = document.getElementById(rootId);\n\nif (root !== null) {\n  ReactDOM.render(<App />, root);\n  registerServiceWorker();\n} else {\n  console.error('React root element is not present');\n}\n","/* symb values should be single characters part of Unicode BMP.\n * if character outside BMP are used, it should be added another object\n *  that maps symb keys to the characters to display in the BoardCells\n */\nexport const symb = {\n  x: '✗', //\\u2717\n  o: 'O',\n  empty: ' ', //\\u0020 a simple white space\n};\n\nexport const symbToA11y = {\n  [symb.x]: 'X',\n  [symb.o]: 'O',\n  [symb.empty]: 'empty',\n};\n\nexport const symbScore = {\n  [symb.x]: 10,\n  [symb.o]: -1,\n  [symb.empty]: 0,\n};\n\nexport const gameMode = {\n  PVAI_EASY: 'easy',\n  PVAI_MEDIUM: 'medium',\n  PVAI_UNFAIR: 'unfair',\n  PVP: 'pvp',\n};\n\nexport const gameModeValues = Object.keys(gameMode).map(function value(key) {\n  return gameMode[key];\n});\n\nexport const gameModeInv = {\n  easy: 'PVAI_EASY',\n  medium: 'PVAI_MEDIUM',\n  unfair: 'PVAI_UNFAIR',\n  pvp: 'PVP',\n};\n\nexport const mediaQueryWidth = '(min-width: 769px)';\n\nexport const cellAriaLabel = [\n  'cell 1,1',\n  'cell 1,2',\n  'cell 1,3',\n  'cell 2,1',\n  'cell 2,2',\n  'cell 2,3',\n  'cell 3,1',\n  'cell 3,2',\n  'cell 3,3',\n];\n\nexport const rootId = 'root';\n\nexport const throttleTime = 150;\n\n/* board constants*/\n\nexport const opposingEdges = {\n  '0': 8,\n  '8': 0,\n  '2': 6,\n  '6': 2,\n};\n\nexport const lines = [\n  [0, 4, 8],\n  [2, 4, 6],\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n];\n\nexport const forkSpecialCases = [\n  [\n    symb.x,\n    symb.empty,\n    symb.empty,\n    symb.empty,\n    symb.o,\n    symb.empty,\n    symb.empty,\n    symb.empty,\n    symb.x,\n  ].join(''),\n  [\n    symb.empty,\n    symb.empty,\n    symb.x,\n    symb.empty,\n    symb.o,\n    symb.empty,\n    symb.x,\n    symb.empty,\n    symb.empty,\n  ].join(''),\n];\n\nexport const sides = [1, 5, 7, 4];\n\nexport const edges = [0, 2, 8, 6];\n","import { createSelector } from 'reselect';\nimport { symb, gameMode } from '../constants';\nimport { winnerLine } from '../util/boardUtil';\nimport { countNot } from '../util/stringUtil';\n\n/* -- simple selectors -- */\nexport const getBoard = state => state.game.present;\n\nexport const getModalState = state => state.isModalOpen;\n\nexport const getRow = ind => state =>\n  state.game.present.slice(3 * ind, 3 * ind + 3);\n\nexport const isCellEmpty = state => ind => getBoard(state)[ind] === symb.empty;\n\nexport const isPVP = state => state.gameMode === 'PVP';\n\nexport const shouldAiAct = state => !(isPVP(state) || isGameOver(state));\n\nexport const canPlayerPlaceSymb = state =>\n  (isPVP(state) || getNextPlayer(state) === symb.x) && !isGameOver(state);\n\nexport const getGameModeVal = state => gameMode[getGameModeKey(state)];\nexport const getGameModeKey = state => state.gameMode;\nexport const getGameModeIndex = state =>\n  Object.keys(gameMode).indexOf(getGameModeKey(state));\n\n/* -- reselect selectors -- */\nexport const getCol = [\n  createSelector(\n    getBoard,\n    board => `${board[0]}${board[3]}${board[6]}`,\n  ),\n  createSelector(\n    getBoard,\n    board => `${board[1]}${board[4]}${board[7]}`,\n  ),\n  createSelector(\n    getBoard,\n    board => `${board[2]}${board[5]}${board[8]}`,\n  ),\n];\n\nexport const getMainDiag = createSelector(\n  getBoard,\n  board => `${board[0]}${board[4]}${board[8]}`,\n);\n\nexport const getAntiDiag = createSelector(\n  getBoard,\n  board => `${board[2]}${board[4]}${board[6]}`,\n);\n\nexport const getTurn = createSelector(\n  getBoard,\n  countNot(symb.empty),\n);\n\nexport const getNextPlayer = createSelector(\n  getTurn,\n  turn => (turn % 2 === 0 ? symb.x : symb.o),\n);\n\nexport const getWinnerLine = createSelector(\n  getMainDiag,\n  getAntiDiag,\n  getRow(0),\n  getRow(1),\n  getRow(2),\n  ...getCol,\n  winnerLine,\n);\n\nexport const isGameOver = createSelector(\n  getWinnerLine,\n  getTurn,\n  (winLine, turn) => winLine !== -1 || turn > 8,\n);\n","//UNDO REDO SELECTORS\nimport { isPVP } from './gameSelectors';\n\nexport const canUndo = state =>\n  isPVP(state) ? state.game.past.length > 0 : state.game.past.length > 1;\n\nexport const canRedo = state =>\n  isPVP(state) ? state.game.future.length > 0 : state.game.future.length > 0;\n\nexport const isNew = state => !(canUndo(state) || canRedo(state));\n","export { canUndo, canRedo, isNew } from './undoRedoSelectors';\nexport {\n  getBoard,\n  getModalState,\n  getRow,\n  getCol,\n  getMainDiag,\n  getAntiDiag,\n  getTurn,\n  getNextPlayer,\n  getWinnerLine,\n  isGameOver,\n  isCellEmpty,\n  shouldAiAct,\n  canPlayerPlaceSymb,\n  getGameModeVal,\n  isPVP,\n  getGameModeKey,\n  getGameModeIndex,\n} from './gameSelectors';\n","export const setIn = (str, index, other) => {\n  return `${str.slice(0, index)}${other}${str.slice(index + 1)}`;\n};\n\nexport const countNot = char => str => {\n  let res = 0;\n\n  for (let i = 0, len = str.length; i < len; i++) {\n    if (str[i] !== char) {\n      res += 1;\n    }\n  }\n  return res;\n};\n","import { getBoard } from '../selectors';\n\nconst noop = () => {};\n\nexport const throttle = (span, func, thisArg) => {\n  let last = 0;\n  let context = thisArg || null;\n  return function throttler(...args) {\n    let now = Date.now();\n    if (now - last >= span) {\n      last = now;\n      return func.apply(context, args);\n    }\n  };\n};\n\nexport const $id = id => document.getElementById(id);\n\nexport const $disabled = elem => elem.hasAttribute('disabled');\n\nexport const areBoardsEqual = (next, prev) => getBoard(next) === getBoard(prev);\n\nexport const warn =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  window.console != null &&\n  typeof window.console.warn === 'function'\n    ? window.console.warn\n    : noop;\n"],"sourceRoot":""}